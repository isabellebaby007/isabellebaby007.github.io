<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Isabelle的博客小站</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="%5Bobject%20Object%5D" rel="hub"/>
    <description>Isabelle的博客小站</description>
    <pubDate>Fri, 09 Mar 2018 13:57:28 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>webpack</title>
      <link>http://yoursite.com/2018/03/09/webpack/</link>
      <guid>http://yoursite.com/2018/03/09/webpack/</guid>
      <pubDate>Fri, 09 Mar 2018 13:42:41 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;webpack&quot;&gt;&lt;a href=&quot;#webpack&quot; class=&quot;headerlink&quot; title=&quot;webpack&quot;&gt;&lt;/a&gt;webpack&lt;/h3&gt;&lt;p&gt;开发一个项目，业务逻辑非常多，开发会按照功能逻辑拆分成一个一个的模块，这个时候开发会更加地有条理，维护起来也会更加方便，但是这样会涉及到一个问题，模块之间会有着复杂的依赖关系，在处理这些依赖的时候，对于前端开发来说，会遇到一个很棘手的问题：因为代码都是从后端请求过来的，没办法像后端那样同步地引用代码，这个时候就需要模块打包器了。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h3><p>开发一个项目，业务逻辑非常多，开发会按照功能逻辑拆分成一个一个的模块，这个时候开发会更加地有条理，维护起来也会更加方便，但是这样会涉及到一个问题，模块之间会有着复杂的依赖关系，在处理这些依赖的时候，对于前端开发来说，会遇到一个很棘手的问题：因为代码都是从后端请求过来的，没办法像后端那样同步地引用代码，这个时候就需要模块打包器了。  <a id="more"></a></p><p>模块打包器会先分析你的项目依赖，然后会按照一些复杂的规则打包，最后会得到一个新的js文件，这个时候你只需要加载这个js文件就可以了。webpack天生拥有这种模块打包的能力，他不仅拥有js打包的能力，还能帮你打包你所有的资源（css文件、字体、图片），在打包过程中，有各种各样的loader来帮助处理各种而样的内容。还有各种插件来辅助开发和项目构建，从而加快开发效率。频繁使用到CommonJS和ES6语法。</p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/09/webpack/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ajax小项目-留言板瀑布流</title>
      <link>http://yoursite.com/2018/03/09/ajax%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%95%99%E8%A8%80%E6%9D%BF%E7%80%91%E5%B8%83%E6%B5%81/</link>
      <guid>http://yoursite.com/2018/03/09/ajax%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%95%99%E8%A8%80%E6%9D%BF%E7%80%91%E5%B8%83%E6%B5%81/</guid>
      <pubDate>Thu, 08 Mar 2018 18:41:24 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;瀑布流&quot;&gt;&lt;a href=&quot;#瀑布流&quot; class=&quot;headerlink&quot; title=&quot;瀑布流&quot;&gt;&lt;/a&gt;瀑布流&lt;/h3&gt;&lt;h4 id=&quot;瀑布流实现原理分析&quot;&gt;&lt;a href=&quot;#瀑布流实现原理分析&quot; class=&quot;headerlink&quot; title=&quot;瀑布流实现原理分析&quot;&gt;&lt;/a&gt;瀑布流实现原理分析&lt;/h4&gt;&lt;p&gt;特点：每一列的宽度一样的，分批加载，&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="瀑布流"><a href="#瀑布流" class="headerlink" title="瀑布流"></a>瀑布流</h3><h4 id="瀑布流实现原理分析"><a href="#瀑布流实现原理分析" class="headerlink" title="瀑布流实现原理分析"></a>瀑布流实现原理分析</h4><p>特点：每一列的宽度一样的，分批加载，<a id="more"></a></p><table><thead><tr><th>分类</th><th>特点</th></tr></thead><tbody><tr><td>固定列</td><td>可视区域宽度变化，列数不变</td></tr><tr><td>非固定列</td><td>可视区域宽度变化，列数变化</td></tr></tbody></table><h4 id="固定列的瀑布流"><a href="#固定列的瀑布流" class="headerlink" title="固定列的瀑布流"></a>固定列的瀑布流</h4><p>布局：在页面放一个ul,定好列数量，三个li，浮动布局，每一列的高度统一都为0，通过ajax异步请求数据，把数据动态地往页面添加，数据是分批请求过来的，每请求一批，把数据动态填充到li里面。为了让高度相差不会太大，把当前数据往三个总高度最短的一列去添加，就可以保证三个li之间的总高度不会相差太远</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oUl=<span class="built_in">document</span>.getElementById(<span class="string">"ul1"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> aLi=oUl.getElementsByTagName(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> iLen=aLi.length;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">//初始化数据处理</span></span></span><br><span class="line"><span class="javascript">ajax(<span class="string">'get'</span>,<span class="string">'getPics.php'</span>,<span class="string">'cpage=1'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data</span>))</span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> data= <span class="built_in">JSON</span>.parse(data);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取高度最短的li</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> _index=getShort();</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oDiv=<span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oImg=<span class="built_in">document</span>.createElement(<span class="string">'img'</span>);</span></span><br><span class="line"><span class="undefined">oImg.src=data[i].preview;</span></span><br><span class="line"><span class="javascript"><span class="comment">//oImg.style.width =data[i].width+'px';</span></span></span><br><span class="line"><span class="undefined">oImg.style.width =225px;</span></span><br><span class="line"><span class="javascript">oImg.style.height =data[i].height+<span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">oDiv.appendChild(oImg);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oP=<span class="built_in">document</span>.createElement(<span class="string">'p'</span>);</span></span><br><span class="line"><span class="undefined">oDiv.appendChild(oP);</span></span><br><span class="line"><span class="undefined">oP.innerHTML=data[i].</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">aLi[_index].appendChild(oDiv);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">getShort</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> index=<span class="number">0</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> ih=aLi[index].offsetHeight;</span></span><br><span class="line"><span class="javascript"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;data.length;i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> (aLi[index].offsetHeight) &#123;</span></span><br><span class="line"><span class="undefined">index=i;</span></span><br><span class="line"><span class="undefined">ih=aLi[i].offsetHeight;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">return</span> index;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body&#123;margin: 0;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">#ul1 &#123;</span></span><br><span class="line"><span class="undefined">width: 1080px;</span></span><br><span class="line"><span class="undefined">margin: 100px auto 0;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">li &#123;</span></span><br><span class="line"><span class="undefined">width: 247px;</span></span><br><span class="line"><span class="undefined">list-style: none;</span></span><br><span class="line"><span class="undefined">float: left;</span></span><br><span class="line"><span class="undefined">margin-right: 10px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">li div &#123;</span></span><br><span class="line"><span class="undefined">border: 1px solid  #000 ;</span></span><br><span class="line"><span class="undefined">padding: 10px;</span></span><br><span class="line"><span class="undefined">margin-bottom: 10px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">li div img &#123;</span></span><br><span class="line"><span class="undefined">width: 225px;</span></span><br><span class="line"><span class="undefined">display: block;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul1"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://s3.mogucdn.com/mlcdn/c45406/171227_2da0h5dl13dgedj4j8k62la45h5kf_640x960.jpg_240x360.v1cAC.70.webp"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://s3.mogucdn.com/mlcdn/c45406/171227_2da0h5dl13dgedj4j8k62la45h5kf_640x960.jpg_240x360.v1cAC.70.webp"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://s3.mogucdn.com/mlcdn/c45406/171227_2da0h5dl13dgedj4j8k62la45h5kf_640x960.jpg_240x360.v1cAC.70.webp"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://s3.mogucdn.com/mlcdn/c45406/171227_2da0h5dl13dgedj4j8k62la45h5kf_640x960.jpg_240x360.v1cAC.70.webp"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="流的实现"><a href="#流的实现" class="headerlink" title="流的实现"></a>流的实现</h5><p>当我们往下拉的时候，动态地再添加一批数据过来，条件是当前最短的一列li，出现在可视区的时候，也就是只要下面有一列没数据了，就可以开始加载下一批数据了。  </p><p>当li的top值加上自身的高小于滚动条滚动的高加上可视区自身的高的时候，说明当前最短的一列已经进入可视区了。  </p><p><img src="/2018/03/09/ajax小项目-留言板瀑布流/scroll.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="留言本项目"><a href="#留言本项目" class="headerlink" title="留言本项目"></a>留言本项目</h3>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/09/ajax%E5%B0%8F%E9%A1%B9%E7%9B%AE-%E7%95%99%E8%A8%80%E6%9D%BF%E7%80%91%E5%B8%83%E6%B5%81/#disqus_thread</comments>
    </item>
    
    <item>
      <title>浏览器的标准模式与怪异模式</title>
      <link>http://yoursite.com/2018/03/08/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F/</link>
      <guid>http://yoursite.com/2018/03/08/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F/</guid>
      <pubDate>Thu, 08 Mar 2018 10:56:46 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;标准模式与怪异模式的由来&quot;&gt;&lt;a href=&quot;#标准模式与怪异模式的由来&quot; class=&quot;headerlink&quot; title=&quot;标准模式与怪异模式的由来&quot;&gt;&lt;/a&gt;标准模式与怪异模式的由来&lt;/h3&gt;&lt;p&gt;在HTML与CSS的标准化未完成之前，各个浏览器对于HTML和CSS的解析有各自不同的实现，而有很多旧的网页都是按照这些非标准的实现去设计的。在HTML与CSS标准确定之后，浏览器一方面要按照标准去实现对HTML与CSS的支持，另一方面又要保证对非标准的旧网页设计的后向兼容性。因此，现代的浏览器一般都有两种渲染模式：&lt;strong&gt;标准模式&lt;/strong&gt;和&lt;strong&gt;怪异模式&lt;/strong&gt;。在&lt;strong&gt;标准模式&lt;/strong&gt;下，浏览器按照HTML与CSS标准对文档进行解析和渲染；而在&lt;strong&gt;怪异模式&lt;/strong&gt;下，浏览器则按照旧有的非标准的实现方式对文档进行解析和渲染。这样的话，对于旧有的网页，浏览器启动怪异模式，就能够使得旧网页正常显示；对于新的网页，则可以启动标准模式，使得新网页能够使用HTML与CSS的标准特性。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="标准模式与怪异模式的由来"><a href="#标准模式与怪异模式的由来" class="headerlink" title="标准模式与怪异模式的由来"></a>标准模式与怪异模式的由来</h3><p>在HTML与CSS的标准化未完成之前，各个浏览器对于HTML和CSS的解析有各自不同的实现，而有很多旧的网页都是按照这些非标准的实现去设计的。在HTML与CSS标准确定之后，浏览器一方面要按照标准去实现对HTML与CSS的支持，另一方面又要保证对非标准的旧网页设计的后向兼容性。因此，现代的浏览器一般都有两种渲染模式：<strong>标准模式</strong>和<strong>怪异模式</strong>。在<strong>标准模式</strong>下，浏览器按照HTML与CSS标准对文档进行解析和渲染；而在<strong>怪异模式</strong>下，浏览器则按照旧有的非标准的实现方式对文档进行解析和渲染。这样的话，对于旧有的网页，浏览器启动怪异模式，就能够使得旧网页正常显示；对于新的网页，则可以启动标准模式，使得新网页能够使用HTML与CSS的标准特性。<a id="more"></a></p><h3 id="浏览器如何确定使用哪种渲染模式"><a href="#浏览器如何确定使用哪种渲染模式" class="headerlink" title="浏览器如何确定使用哪种渲染模式"></a>浏览器如何确定使用哪种渲染模式</h3><p>知道了这两种渲染模式的来由，那剩下的问题就是浏览器如何能够确定应该使用哪种模式了。其实归根结底就是，浏览器如何能将旧网页与新网页区分开来。</p><p>平常编写网页的时候，一般都会见到HTML文档的头部会有文档类型声明：<code>DOCTYPE</code>。当浏览器遇到正确的文档声明时，浏览器就会启动标准模式，按照制定的文档类型标准解析和渲染文档。而对于旧有的网页，由于网页编写的当时标准还没有确定，所以一般是不会有文档类型声明的。所以，对于没有文档类型声明或者文档类型声明不正确的文档，浏览器就会认为它是一个旧的HTML文档，就会使用怪异模式解析和渲染该文档。关于<code>DOCTYPE</code>的更详细说明，请戳这里 <a href="https://link.jianshu.com?t=http://www.jb51.net/web/34217.html" target="_blank" rel="noopener">DOCTYPE声明作用及用法详解</a>。</p><h3 id="标准模式与怪异模式的区别"><a href="#标准模式与怪异模式的区别" class="headerlink" title="标准模式与怪异模式的区别"></a>标准模式与怪异模式的区别</h3><h4 id="盒模型的处理差异"><a href="#盒模型的处理差异" class="headerlink" title="盒模型的处理差异"></a>盒模型的处理差异</h4><p>标准CSS盒模型的宽度和高度等于内容区的高度和宽度，不包含内边距和边框，而IE6之前的浏览器实现的盒模型的宽高计算方式是包含内边距和边框的。因此，对于IE，怪异模式和标准模式下的盒模型宽高计算方式是不一样的；</p><h4 id="行内元素的垂直对齐"><a href="#行内元素的垂直对齐" class="headerlink" title="行内元素的垂直对齐"></a>行内元素的垂直对齐</h4><p>很多早期的浏览器对齐图片至包含它们的盒子的下边框，虽然CSS的规范要求它们被对齐至盒内文本的基线。标准模式下，基于Gecko的浏览器将会对齐至基线，而在quirks模式下它们会对齐至底部。最直接的例子就是图片的显示。在标准模式下，图片并不是与父元素的下边框对齐的，如果仔细观察，你会发现图片与父元素下边框之间存在一点小空隙。那是因为标准模式下，图片是基线对齐的。而怪异模式下，则不存在这个问题。具体请看这篇文章 <a href="https://link.jianshu.com?t=http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">CSS深入理解vertical-align和line-height的基友关系</a>。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://link.jianshu.com/?t=http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">CSS深入理解vertical-align和line-height的基友关系</a></li><li><a href="https://link.jianshu.com/?t=http://www.jb51.net/web/34217.html" target="_blank" rel="noopener">DOCTYPE声明作用及用法详解</a></li><li><a href="https://link.jianshu.com/?t=https://zh.wikipedia.org/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">怪异模式</a></li></ul><p>作者：tsyeyuanfeng链接：<a href="https://www.jianshu.com/p/dcab7cde8c04來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。" target="_blank" rel="noopener">https://www.jianshu.com/p/dcab7cde8c04來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/08/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>js之getpos()</title>
      <link>http://yoursite.com/2018/03/08/js%E4%B9%8Bgetpos/</link>
      <guid>http://yoursite.com/2018/03/08/js%E4%B9%8Bgetpos/</guid>
      <pubDate>Thu, 08 Mar 2018 09:38:55 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>http://yoursite.com/2018/03/08/js%E4%B9%8Bgetpos/#disqus_thread</comments>
    </item>
    
    <item>
      <title>前端工具</title>
      <link>http://yoursite.com/2018/03/08/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/</link>
      <guid>http://yoursite.com/2018/03/08/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/</guid>
      <pubDate>Thu, 08 Mar 2018 03:59:01 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;ie浏览器测试工具：IETESTER&quot;&gt;&lt;a href=&quot;#ie浏览器测试工具：IETESTER&quot; class=&quot;headerlink&quot; title=&quot;ie浏览器测试工具：IETESTER&quot;&gt;&lt;/a&gt;ie浏览器测试工具：IETESTER&lt;/h3&gt;&lt;p&gt;&lt;a hre
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="ie浏览器测试工具：IETESTER"><a href="#ie浏览器测试工具：IETESTER" class="headerlink" title="ie浏览器测试工具：IETESTER"></a>ie浏览器测试工具：IETESTER</h3><p><a href="http://www.ietester.cn/" target="_blank" rel="noopener">http://www.ietester.cn/</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/08/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
