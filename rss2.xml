<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Isabelle的博客小站</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="%5Bobject%20Object%5D" rel="hub"/>
    <description>Isabelle的博客小站</description>
    <pubDate>Thu, 08 Mar 2018 11:35:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>浏览器的标准模式与怪异模式</title>
      <link>http://yoursite.com/2018/03/08/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F/</link>
      <guid>http://yoursite.com/2018/03/08/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F/</guid>
      <pubDate>Thu, 08 Mar 2018 10:56:46 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;标准模式与怪异模式的由来&quot;&gt;&lt;a href=&quot;#标准模式与怪异模式的由来&quot; class=&quot;headerlink&quot; title=&quot;标准模式与怪异模式的由来&quot;&gt;&lt;/a&gt;标准模式与怪异模式的由来&lt;/h3&gt;&lt;p&gt;在HTML与CSS的标准化未完成之前，各个浏览器对于HTML和CSS的解析有各自不同的实现，而有很多旧的网页都是按照这些非标准的实现去设计的。在HTML与CSS标准确定之后，浏览器一方面要按照标准去实现对HTML与CSS的支持，另一方面又要保证对非标准的旧网页设计的后向兼容性。因此，现代的浏览器一般都有两种渲染模式：&lt;strong&gt;标准模式&lt;/strong&gt;和&lt;strong&gt;怪异模式&lt;/strong&gt;。在&lt;strong&gt;标准模式&lt;/strong&gt;下，浏览器按照HTML与CSS标准对文档进行解析和渲染；而在&lt;strong&gt;怪异模式&lt;/strong&gt;下，浏览器则按照旧有的非标准的实现方式对文档进行解析和渲染。这样的话，对于旧有的网页，浏览器启动怪异模式，就能够使得旧网页正常显示；对于新的网页，则可以启动标准模式，使得新网页能够使用HTML与CSS的标准特性。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="标准模式与怪异模式的由来"><a href="#标准模式与怪异模式的由来" class="headerlink" title="标准模式与怪异模式的由来"></a>标准模式与怪异模式的由来</h3><p>在HTML与CSS的标准化未完成之前，各个浏览器对于HTML和CSS的解析有各自不同的实现，而有很多旧的网页都是按照这些非标准的实现去设计的。在HTML与CSS标准确定之后，浏览器一方面要按照标准去实现对HTML与CSS的支持，另一方面又要保证对非标准的旧网页设计的后向兼容性。因此，现代的浏览器一般都有两种渲染模式：<strong>标准模式</strong>和<strong>怪异模式</strong>。在<strong>标准模式</strong>下，浏览器按照HTML与CSS标准对文档进行解析和渲染；而在<strong>怪异模式</strong>下，浏览器则按照旧有的非标准的实现方式对文档进行解析和渲染。这样的话，对于旧有的网页，浏览器启动怪异模式，就能够使得旧网页正常显示；对于新的网页，则可以启动标准模式，使得新网页能够使用HTML与CSS的标准特性。<a id="more"></a></p><h3 id="浏览器如何确定使用哪种渲染模式"><a href="#浏览器如何确定使用哪种渲染模式" class="headerlink" title="浏览器如何确定使用哪种渲染模式"></a>浏览器如何确定使用哪种渲染模式</h3><p>知道了这两种渲染模式的来由，那剩下的问题就是浏览器如何能够确定应该使用哪种模式了。其实归根结底就是，浏览器如何能将旧网页与新网页区分开来。</p><p>平常编写网页的时候，一般都会见到HTML文档的头部会有文档类型声明：<code>DOCTYPE</code>。当浏览器遇到正确的文档声明时，浏览器就会启动标准模式，按照制定的文档类型标准解析和渲染文档。而对于旧有的网页，由于网页编写的当时标准还没有确定，所以一般是不会有文档类型声明的。所以，对于没有文档类型声明或者文档类型声明不正确的文档，浏览器就会认为它是一个旧的HTML文档，就会使用怪异模式解析和渲染该文档。关于<code>DOCTYPE</code>的更详细说明，请戳这里 <a href="https://link.jianshu.com?t=http://www.jb51.net/web/34217.html" target="_blank" rel="noopener">DOCTYPE声明作用及用法详解</a>。</p><h3 id="标准模式与怪异模式的区别"><a href="#标准模式与怪异模式的区别" class="headerlink" title="标准模式与怪异模式的区别"></a>标准模式与怪异模式的区别</h3><h4 id="盒模型的处理差异"><a href="#盒模型的处理差异" class="headerlink" title="盒模型的处理差异"></a>盒模型的处理差异</h4><p>标准CSS盒模型的宽度和高度等于内容区的高度和宽度，不包含内边距和边框，而IE6之前的浏览器实现的盒模型的宽高计算方式是包含内边距和边框的。因此，对于IE，怪异模式和标准模式下的盒模型宽高计算方式是不一样的；</p><h4 id="行内元素的垂直对齐"><a href="#行内元素的垂直对齐" class="headerlink" title="行内元素的垂直对齐"></a>行内元素的垂直对齐</h4><p>很多早期的浏览器对齐图片至包含它们的盒子的下边框，虽然CSS的规范要求它们被对齐至盒内文本的基线。标准模式下，基于Gecko的浏览器将会对齐至基线，而在quirks模式下它们会对齐至底部。最直接的例子就是图片的显示。在标准模式下，图片并不是与父元素的下边框对齐的，如果仔细观察，你会发现图片与父元素下边框之间存在一点小空隙。那是因为标准模式下，图片是基线对齐的。而怪异模式下，则不存在这个问题。具体请看这篇文章 <a href="https://link.jianshu.com?t=http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">CSS深入理解vertical-align和line-height的基友关系</a>。</p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li><a href="https://link.jianshu.com/?t=http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="noopener">CSS深入理解vertical-align和line-height的基友关系</a></li><li><a href="https://link.jianshu.com/?t=http://www.jb51.net/web/34217.html" target="_blank" rel="noopener">DOCTYPE声明作用及用法详解</a></li><li><a href="https://link.jianshu.com/?t=https://zh.wikipedia.org/wiki/%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">怪异模式</a></li></ul><p>作者：tsyeyuanfeng链接：<a href="https://www.jianshu.com/p/dcab7cde8c04來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。" target="_blank" rel="noopener">https://www.jianshu.com/p/dcab7cde8c04來源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/08/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%80%AA%E5%BC%82%E6%A8%A1%E5%BC%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>js之getpos()</title>
      <link>http://yoursite.com/2018/03/08/js%E4%B9%8Bgetpos/</link>
      <guid>http://yoursite.com/2018/03/08/js%E4%B9%8Bgetpos/</guid>
      <pubDate>Thu, 08 Mar 2018 09:38:55 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>http://yoursite.com/2018/03/08/js%E4%B9%8Bgetpos/#disqus_thread</comments>
    </item>
    
    <item>
      <title>前端工具</title>
      <link>http://yoursite.com/2018/03/08/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/</link>
      <guid>http://yoursite.com/2018/03/08/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/</guid>
      <pubDate>Thu, 08 Mar 2018 03:59:01 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;ie浏览器测试工具：IETESTER&quot;&gt;&lt;a href=&quot;#ie浏览器测试工具：IETESTER&quot; class=&quot;headerlink&quot; title=&quot;ie浏览器测试工具：IETESTER&quot;&gt;&lt;/a&gt;ie浏览器测试工具：IETESTER&lt;/h3&gt;&lt;p&gt;&lt;a hre
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="ie浏览器测试工具：IETESTER"><a href="#ie浏览器测试工具：IETESTER" class="headerlink" title="ie浏览器测试工具：IETESTER"></a>ie浏览器测试工具：IETESTER</h3><p><a href="http://www.ietester.cn/" target="_blank" rel="noopener">http://www.ietester.cn/</a></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/08/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ajax原理</title>
      <link>http://yoursite.com/2018/03/07/ajax%E5%8E%9F%E7%90%86/</link>
      <guid>http://yoursite.com/2018/03/07/ajax%E5%8E%9F%E7%90%86/</guid>
      <pubDate>Wed, 07 Mar 2018 04:19:04 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;什么是ajax&quot;&gt;&lt;a href=&quot;#什么是ajax&quot; class=&quot;headerlink&quot; title=&quot;什么是ajax&quot;&gt;&lt;/a&gt;什么是ajax&lt;/h3&gt;&lt;p&gt;Asynchronous JavaScript and XML(异步JavaScript和XML)。作用1、节省用户操作，时间，提高用户体验，减少数据请求。2、传输获取数据  &lt;/p&gt;
&lt;p&gt;使用Ajax：使用Ajax获取某一文本文件的内容 ,可以使页面在无刷新的情况下去获取数据。因为网页是单次请求的，如果不再去刷新，请求的话，页面是不会变化的。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="什么是ajax"><a href="#什么是ajax" class="headerlink" title="什么是ajax"></a>什么是ajax</h3><p>Asynchronous JavaScript and XML(异步JavaScript和XML)。作用1、节省用户操作，时间，提高用户体验，减少数据请求。2、传输获取数据  </p><p>使用Ajax：使用Ajax获取某一文本文件的内容 ,可以使页面在无刷新的情况下去获取数据。因为网页是单次请求的，如果不再去刷新，请求的话，页面是不会变化的。<a id="more"></a></p><p>Ajax过程详解：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        oBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//打开浏览器</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">/*1、创建一个ajax对象*/</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//ie6以下 new  ActiveXObject('Microsoft.XMLHTTP')</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> xhr=<span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined">           /* if(window.XMLHttpRequest)&#123;</span></span><br><span class="line"><span class="javascript">                xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                xhr= <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHTTP'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;*/</span></span><br><span class="line"><span class="javascript">            <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="javascript">                xhr = <span class="keyword">new</span> XMLHttpRequest();</span></span><br><span class="line"><span class="javascript">            &#125;<span class="keyword">catch</span>(e)&#123;</span></span><br><span class="line"><span class="javascript">                xhr= <span class="keyword">new</span> ActiveXObject(<span class="string">'Microsoft.XMLHTTP'</span>);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            </span></span><br><span class="line"><span class="javascript">            <span class="comment">//在地址栏输入地址</span></span></span><br><span class="line"><span class="undefined">            /*</span></span><br><span class="line"><span class="undefined">            open方法</span></span><br><span class="line"><span class="undefined">            参数</span></span><br><span class="line"><span class="undefined">                1、打开方式</span></span><br><span class="line"><span class="undefined">                2、地址</span></span><br><span class="line"><span class="undefined">                3、是否异步  </span></span><br><span class="line"><span class="undefined">                   异步：非阻塞，前面的代码不会影响后面代码的执行</span></span><br><span class="line"><span class="undefined">                   同步：阻塞，前面的代码会影响后面代码的执行</span></span><br><span class="line"><span class="undefined">            */</span></span><br><span class="line"><span class="javascript">            xhr.open(<span class="string">'get'</span>, <span class="string">'1.txt'</span>, <span class="literal">true</span>);<span class="comment">//true代表异步 false代表同步</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//提交，发送请求</span></span></span><br><span class="line"><span class="undefined">            xhr.send();</span></span><br><span class="line"><span class="javascript"><span class="comment">//等待服务器返回内容</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//readyState:ajax工作状态</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//responseText:ajax请求返回的内容就被存放在这个属性下民</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//on readystate change :当readyState改变的时候触发</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//status:服务器状态，http状态码</span></span></span><br><span class="line"><span class="javascript">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(xhr.status==<span class="number">200</span>)&#123;   alert(xhr.responseText);&#125;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">"出错了"</span>+<span class="string">"err:404"</span>);</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                 </span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">"按钮"</span> <span class="attr">id</span>=<span class="string">"btn"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><p>表单：数据的提交</p><table><thead><tr><th>action</th><th>数据提交的地址，默认是当前页面</th></tr></thead><tbody><tr><td>method</td><td>数据提交的方式，分为get和post，默认是get</td></tr><tr><td>enctype</td><td>提交的数据的格式,默认是application/x-www-form-urlencoded</td></tr></tbody></table><p>get方式：把数据名称和数据对应的数据值用=连接，如果有多个的话，那么他会把多个数据组合用&amp;进行连接，然后把数据放到url?的后面传到指定页面。url长度限制的原因，我们不要通过get方式传递过多的数据   </p><p>post方式：理论上传递数据长度无限制</p><h3 id="数据的获取"><a href="#数据的获取" class="headerlink" title="数据的获取"></a>数据的获取</h3><p>onreadystatechange事件</p><table><thead><tr><th>readyState属性</th><th>请求状态</th></tr></thead><tbody><tr><td>0</td><td>未初始化，还没有调用open()方法</td></tr><tr><td>1</td><td>载入，已调用send()方法，正在发送请求</td></tr><tr><td>2</td><td>载入完成，send()方法完成，已收到全部响应内容</td></tr><tr><td>3</td><td>解析，正在解析相应内容</td></tr><tr><td>4</td><td>完成，相应内容解析完成，可以在客户端调用了</td></tr></tbody></table><p>status属性：服务器请求资源的状态</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>responeseText</td><td>返回以文本形式存放的内容</td></tr><tr><td>responseXML</td><td>返回XML形式的内容</td></tr></tbody></table>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/07/ajax%E5%8E%9F%E7%90%86/#disqus_thread</comments>
    </item>
    
    <item>
      <title>ajax:服务器环境搭建</title>
      <link>http://yoursite.com/2018/03/07/ajax-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <guid>http://yoursite.com/2018/03/07/ajax-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <pubDate>Wed, 07 Mar 2018 02:34:03 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>http://yoursite.com/2018/03/07/ajax-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
