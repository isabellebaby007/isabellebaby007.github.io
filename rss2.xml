<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Isabelle的博客小站</title>
    <link>http://yoursite.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    <atom:link href="%5Bobject%20Object%5D" rel="hub"/>
    <description>Isabelle的博客小站</description>
    <pubDate>Sat, 03 Mar 2018 18:45:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>数据类型转换练习</title>
      <link>http://yoursite.com/2018/03/03/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E7%BB%83%E4%B9%A0/</link>
      <guid>http://yoursite.com/2018/03/03/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E7%BB%83%E4%B9%A0/</guid>
      <pubDate>Sat, 03 Mar 2018 04:42:33 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;找到合适的值&quot;&gt;&lt;a href=&quot;#找到合适的值&quot; class=&quot;headerlink&quot; title=&quot;找到合适的值&quot;&gt;&lt;/a&gt;找到合适的值&lt;/h3&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="找到合适的值"><a href="#找到合适的值" class="headerlink" title="找到合适的值"></a>找到合适的值</h3><a id="more"></a><pre><code>&lt;!--more--&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    body {        font-size: 20px;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var arr = [&apos;100px&apos;, &apos;abc&apos; - 6, [], -98765, 34, -2, 0, &apos;300&apos;, , function() { alert(1); }, null, document, [], true, &apos;200px&apos; - 30, &apos;23.45元&apos;, 5, Number(&apos;abc&apos;), function() { alert(3); }, &apos;xyz&apos; - 90];        var ob = document.getElementsByTagName(&apos;body&apos;)[0];        var a1 = [];        var a2 = [];        var a3 = [];        var a4 = [];        var max = 0;        /*            1、找到arr里所有的数字：-98765, 34, -2, 0, 5            2、找到可以转成数字的：&apos;100px&apos;, -98765, 34, -2, 0, &apos;300&apos;, &apos;23.45元&apos;,  5             3、把转成数字以后，最大值判断出来：300            4、把 NaN 所在的位置找出来：1 14 17  19        */        //题目一：用函数把数字选择出来，由于NaN在数字类型，所以用ISNaN把NAN去除掉        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;1、找到arr里所有的数字:  &apos;        for (var i = 0; i &lt; arr.length; i++) {            if (typeof arr[i] == &apos;number&apos; &amp;&amp; !isNaN(arr[i])) {                a1.push(arr[i]);            }        }        for (var i = 0; i &lt; a1.length; i++) {            ob.innerHTML += a1[i] + &apos; ,&apos;;        }        //题目二：用函数把可以数字转换的找出来，再单独找0,要把中括号去除呢        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;2、找到可以转成数字的:  &apos;        for (var i = 0; i &lt; arr.length; i++) {            if (parseFloat(arr[i]) || (arr[i] == 0 &amp;&amp; typeof arr[i] == &apos;number&apos;)) {                a2.push(arr[i]);            }        }        for (var i = 0; i &lt; a2.length; i++) {            ob.innerHTML += a2[i] + &apos; ,&apos;;        }        //题目三：用函数把可以数字转换出来，再单独找0输入        for (var i = 0; i &lt; a2.length; i++) {            if (parseFloat(a2[i]) || a2[i] == 0) {                a3.push(parseFloat(a2[i]));            }        }        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;3、把转换数字后的数组为:  &apos;        for (var i = 0; i &lt; a3.length; i++) {            if (max &lt; a3[i]) {                max = a3[i];            }            ob.innerHTML += a3[i] + &apos; ,&apos;;        }        ob.innerHTML += &apos;  排序后最大值：&apos; + max;        //题目四：把 NaN 所在的位置找出来：1 14 17  19        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;4、把 NaN 所在的位置找出来:  &apos;        for (var i = 0; i &lt; arr.length; i++) {            if (isNaN(arr[i]) &amp;&amp; typeof arr[i] == &apos;number&apos;) {                a4.push(i);            }        }        for (var i = 0; i &lt; a4.length; i++) {            ob.innerHTML += a4[i] + &apos; ,&apos;;        }    }    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/03/数据类型转换练习/zhuanhuan.png" alt=""></p><h3 id="QQ号码"><a href="#QQ号码" class="headerlink" title="QQ号码"></a>QQ号码</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;&lt;/head&gt;&lt;script&gt;window.onload = function() {    var oText = document.getElementById(&apos;t&apos;)    var oBtn = document.getElementById(&apos;b&apos;)    var count = 0;    oBtn.onclick = function() {        if (oText.value == &apos;&apos;) {            alert(&apos;没有输入&apos;)            count++;        }        if (isNaN(oText.value)) {            alert(&apos;非数字&apos;)            count++;        }        if (oText.value.charAt(0) == 0) {            alert(&apos;不能有0在前面&apos;)            count++;        }        if (parseFloat(oText.value) != parseInt(oText.value)) {            alert(&apos;不能是小数&apos;)            count++;        }        if (oText.value.length &lt; 5 || oText.value.length &gt; 10) {            alert(&apos;输入的数字必须在5位以上、10位以内&apos;)            count++;        }        if (count == 0) {            alert(&apos;输入的号码正确呢&apos;)        }    }}&lt;/script&gt;&lt;body&gt;    请输入QQ号码：    &lt;input type=&quot;text&quot; value=&quot;&quot; id=&quot;t&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;判断&quot; id=&quot;b&quot; /&gt;    &lt;br /&gt; 1、有没有输入    &lt;br /&gt; 2、输入的是不是数字    &lt;br /&gt; 3、不能有0在前面    &lt;br /&gt; 4、不能是小数    &lt;br /&gt; 5、输入的数字必须在5位以上、10位以内    &lt;br /&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/03/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E7%BB%83%E4%B9%A0/#disqus_thread</comments>
    </item>
    
    <item>
      <title>区块链简介</title>
      <link>http://yoursite.com/2018/03/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%AE%80%E4%BB%8B/</link>
      <guid>http://yoursite.com/2018/03/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%AE%80%E4%BB%8B/</guid>
      <pubDate>Fri, 02 Mar 2018 05:33:41 GMT</pubDate>
      <description>
      
      </description>
      
      <comments>http://yoursite.com/2018/03/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%AE%80%E4%BB%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>js数据类型、类型转换</title>
      <link>http://yoursite.com/2018/03/02/js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</link>
      <guid>http://yoursite.com/2018/03/02/js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</guid>
      <pubDate>Fri, 02 Mar 2018 04:04:35 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;js数据类型以及相关操作&quot;&gt;&lt;a href=&quot;#js数据类型以及相关操作&quot; class=&quot;headerlink&quot; title=&quot;js数据类型以及相关操作&quot;&gt;&lt;/a&gt;js数据类型以及相关操作&lt;/h3&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="js数据类型以及相关操作"><a href="#js数据类型以及相关操作" class="headerlink" title="js数据类型以及相关操作"></a>js数据类型以及相关操作</h3><a id="more"></a>  <pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;script&gt;/*ECMAScript：标准、核心HTML 标签类型：block、inline、inline-block、table……JS中的数据类型：数字、字符串、布尔、函数、对象(obj、[]、{}、null)、未定义typeof 判断数据类型*/var i = 100;// alert( typeof i );            // numbervar s = &apos; miaov &apos;;// alert( typeof s );                // string// alert( s.length );                // 7// alert( s.charAt(3) );        // &apos;a&apos;var b = true;                // 布尔值：true  false// alert( typeof b );        // booleanif ( true ) {}for ( ; false ; ) {  }var fn = function (){ alert(1); };// fn();function fn1(){    alert(2);}// alert( fn1 );// fn1();var obj = document;// alert( typeof obj );                // object  物体、东西、对象obj.abc = 123;obj.onOff = true;obj.fn1 = function (){ alert(1); };// alert( document.onOff );        // 123// obj.fn1();var arr = [ 1,2,3,4 ];// alert( arr.length );// arr[2] = 345;// alert( arr );// arr.push( 5,6,7 );// alert( arr );// alert( typeof arr );        // objectarr.abc = 999;arr.fn1 = function (){ alert(&apos;ok&apos;); };// alert( arr.abc );// arr.fn1();var json = { name:&apos;miaov&apos;, age:5  };// alert( json.name + &apos;今年&apos; + json.age + &apos;岁了&apos; );// alert( typeof json );//objectvar n = null;// alert( typeof n );//空的东西不能添加属性var u;// alert( typeof u );            // undefined 未定义// 表示你写的程序出问题了~~&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><h3 id="数据类型转换-显式类型转换"><a href="#数据类型转换-显式类型转换" class="headerlink" title="数据类型转换(显式类型转换)"></a>数据类型转换(显式类型转换)</h3><h4 id="字符串变成数字"><a href="#字符串变成数字" class="headerlink" title="字符串变成数字"></a>字符串变成数字</h4><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;script&gt;var a = &apos;+100&apos;;// alert( a+100 );        // &apos;100100&apos;// alert( Number(a) );            // 100var a1 = &apos;    &apos;;// alert( Number(a1) );        // 0var a2 = true;// alert( Number(a2) );            // true-1  false-0var a3=[];alert(Number(a3));             //0var a3=[&apos;&apos;];alert(Number(a3));             //0var a3 = [ 1 ];// alert( Number(a3) );            // 1 var a4 = null;// alert( Number(a4) );                // 0var a3=function(){alert(1);};alert(Number(a3));              //NaN  ////////////////////////////////////////////////////////////////////////////var json = {};// alert( Number(json) );   //NaNvar u;// alert( Number(u) );   //NaNvar a3 = function (){ alert(1); };// alert( Number(a3) );            // NaN&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="parseInt与parseFloat的区别与小技巧"><a href="#parseInt与parseFloat的区别与小技巧" class="headerlink" title="parseInt与parseFloat的区别与小技巧"></a>parseInt与parseFloat的区别与小技巧</h4><pre><code> var b = &apos; 200px&apos;; alert( parseInt(b) );      //200  默认十进制 var b = &apos; 200px&apos;; alert( parseInt(b，16进制) );      //200  十六进制var b = &apos; 200px1234567&apos;; alert( parseInt(b) );      //200  var c = &apos;12.34元&apos;;// alert( parseInt(c) );    //12var c = &apos;12.34元&apos;;// alert( parseFloat(c) );  //12.34var c = &apos;12.3.4元&apos;;// alert( parseFloat(c) );  //12.3</code></pre><p>验证是整数还是小数</p><pre><code>var num = &apos;200.45&apos;;    if( parseInt(num) == parseFloat(num) ){    alert( num + &apos;是整数&apos; );}else{    alert( num + &apos;是小数&apos; );}</code></pre><h3 id="js中稀奇古怪的隐式类型转换"><a href="#js中稀奇古怪的隐式类型转换" class="headerlink" title="js中稀奇古怪的隐式类型转换"></a>js中稀奇古怪的隐式类型转换</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    /*    显式类型转换（强制类型转换）：    Number()    parseInt()    parseFloat()    隐式类型转换：        +                                200 + &apos;3&apos;        变成字符串        - * / %                &apos;200&apos; - 3     变成数字        ++ --                        变成数字        &gt; &lt;                         数字的比较 、字符串的比较        !    取反                    把右边的数据类型转成布尔值        ==         */    // alert( Number(&apos;……&apos;) );            NaN    // alert( &apos;……&apos;-9 );                                    NaN    // alert( &apos;2&apos; == 2 );//字符串的比较    // alert( &apos;10000000&apos; &gt; &apos;9&apos; );//false 一位一位地比较    // 数字的比较与字符串的比较    // &apos;1000000&apos;   &apos;9&apos;    // alert( &apos;2&apos; == 2 );  //true   判断值，所以两个等号可以转换    alert(&apos;2&apos;===2); //三个等号更严谨，先去判断类型，再去判断值    alert(!&apos;ok&apos;);   //false    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    // JS中的数据类型：数字（NaN）、字符串、布尔、函数、对象(obj、[]、{}、null)、未定义    var a = Number(&apos;abc&apos;);    // alert( a );            // NaN    // NaN：not a number 不是个 数字 的 数字类型    // alert( typeof (a) );            // number    // 一旦写程序中出现：NaN  肯定进行了非法的运算操作    // alert( &apos;200px&apos; -  100 );    // NaN 是 false    if (a) {        alert( &apos;真&apos; );    } else {        alert( &apos;假&apos; );    }    var abc = [];    // alert( abc === abc );                true    // NaN 与自己都不相等！！除了NaN以外，其他的数据类型都是自己和自己相等的    alert(a === a); // false    isNaN();//判断某些值是不是数字类型  不是数字true  是数字 false    //在内部是根据Number来进行转换，转换之后进行判断    alert(isNaN(&apos;250&apos;));//&apos;250&apos;--250--false    alert(isNaN(true));//true--1--false    alert(isNaN([]));//[]--0--false    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><h4 id="isNaN-小应用"><a href="#isNaN-小应用" class="headerlink" title="isNaN()小应用"></a>isNaN()小应用</h4><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aInp = document.getElementsByTagName(&apos;input&apos;);        var str = &apos;&apos;;        aInp[1].onclick = function() {            str = aInp[0].value;            // HTML 中拿到的内容，类型都是字符串            // alert( typeof str );            if (isNaN(str)) {                alert(str + &apos;不是数字&apos;);            } else {                alert(str + &apos;是数字&apos;);            }        };    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;text&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;判断输入值是不是数字&quot; /&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/02/js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>简单实现QQ好友列表</title>
      <link>http://yoursite.com/2018/03/02/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0QQ%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/</link>
      <guid>http://yoursite.com/2018/03/02/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0QQ%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/</guid>
      <pubDate>Fri, 02 Mar 2018 02:03:10 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;简单实现QQ好友列表&quot;&gt;&lt;a href=&quot;#简单实现QQ好友列表&quot; class=&quot;headerlink&quot; title=&quot;简单实现QQ好友列表&quot;&gt;&lt;/a&gt;简单实现QQ好友列表&lt;/h3&gt;&lt;p&gt;需求：实现折叠与展开，实现点击高亮显示&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="简单实现QQ好友列表"><a href="#简单实现QQ好友列表" class="headerlink" title="简单实现QQ好友列表"></a>简单实现QQ好友列表</h3><p>需求：实现折叠与展开，实现点击高亮显示  <a id="more"></a></p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    ul,    h2 {  /*样式重置*/        padding: 0;        margin: 0;    }    li {/* 去掉列表前面的点*/        list-style: none;    }    #list {        width: 240px;        border: 1px solid #333;        margin: 0 auto;    }    #list .lis {}    #list h2 {        height: 30px;        line-height: 30px;        text-indent: 20px;        background: url(img/ico1.gif) no-repeat 5px center #6FF;        color: #000;    }    #list .active {        background: url(img/ico2.gif) no-repeat 5px center #FF9;        color: #000;    }    #list ul {        display: none;    }    #list ul li {        line-height: 24px;        border-bottom: 1px solid #333;        text-indent: 24px;    }    #list ul .hover {        background: #6FF;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var oUl = document.getElementById(&apos;list&apos;);        var aH2 = oUl.getElementsByTagName(&apos;h2&apos;);        var aUl = oUl.getElementsByTagName(&apos;ul&apos;);        var aLi = null;        var arrLi = [];        for (var i = 0; i &lt; aH2.length; i++) {            aH2[i].index = i;            aH2[i].onclick = function() {                for (var i = 0; i &lt; aH2.length; i++) {                    if (i != this.index) {                        aUl[i].style.display = &apos;none&apos;;                        aH2[i].className = &apos;&apos;;                    }                }                if (this.className == &apos;&apos;) { /*这里两个等号或者三个等号都可以*/                    aUl[this.index].style.display = &apos;block&apos;;                    this.className = &apos;active&apos;;                } else {                    aUl[this.index].style.display = &apos;none&apos;;                    this.className = &apos;&apos;;                }            };        }        for (var i = 0; i &lt; aUl.length; i++) {            aLi = aUl[i].getElementsByTagName(&apos;li&apos;);            for (var j = 0; j &lt; aLi.length; j++) {                arrLi.push(aLi[j]);            }        }        for (var i = 0; i &lt; arrLi.length; i++) {            arrLi[i].onclick = function() {                for (var i = 0; i &lt; arrLi.length; i++) {                    if (arrLi[i] != this) {                        arrLi[i].className = &apos;&apos;;                    }                }                if (this.className == &apos;&apos;) {                    this.className = &apos;hover&apos;;                } else {                    this.className = &apos;&apos;;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;ul id=&quot;list&quot;&gt;        &lt;li class=&quot;lis&quot;&gt;            &lt;h2&gt;我的好友&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;张三&lt;/li&gt;                &lt;li&gt;张三&lt;/li&gt;                &lt;li&gt;张三&lt;/li&gt;                &lt;li&gt;张三&lt;/li&gt;            &lt;/ul&gt;        &lt;/li&gt;        &lt;li class=&quot;lis&quot;&gt;            &lt;h2&gt;企业好友&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;            &lt;/ul&gt;        &lt;/li&gt;        &lt;li class=&quot;lis&quot;&gt;            &lt;h2&gt;黑名单&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;张小三&lt;/li&gt;                &lt;li&gt;李小四&lt;/li&gt;            &lt;/ul&gt;        &lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/03/02/简单实现QQ好友列表/yanshi.gif" alt=""></p>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/02/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0QQ%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/#disqus_thread</comments>
    </item>
    
    <item>
      <title>自定义属性</title>
      <link>http://yoursite.com/2018/03/02/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/</link>
      <guid>http://yoursite.com/2018/03/02/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/</guid>
      <pubDate>Thu, 01 Mar 2018 17:53:24 GMT</pubDate>
      <description>
      
        &lt;h3 id=&quot;什么是自定义属性&quot;&gt;&lt;a href=&quot;#什么是自定义属性&quot; class=&quot;headerlink&quot; title=&quot;什么是自定义属性&quot;&gt;&lt;/a&gt;什么是自定义属性&lt;/h3&gt;&lt;p&gt;通俗地讲，就是js往html上添加东西。js可以为任何html元素添加任意个自定义属性。例如下面程序的abc、xyz就是自定义属性&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="什么是自定义属性"><a href="#什么是自定义属性" class="headerlink" title="什么是自定义属性"></a>什么是自定义属性</h3><p>通俗地讲，就是js往html上添加东西。js可以为任何html元素添加任意个自定义属性。例如下面程序的abc、xyz就是自定义属性 <a id="more"></a> </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].abc = 123;            aBtn[i].xyz = true;        }         alert(aBtn[0].abc);    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/03/02/自定义属性/zidingyi.png" alt=""></p><h3 id="应用1-自定义一组开关应用"><a href="#应用1-自定义一组开关应用" class="headerlink" title="应用1:自定义一组开关应用"></a>应用1:自定义一组开关应用</h3><p>注意不能当作判断条件的有1、背景不能判断 2、color不能判断 3、相对路径不能当作判断条件  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    li {        list-style: none;        width: 114px;        height: 140px;        background: url(img/normal.png);        float: left;        margin-right: 20px;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var aLi = document.getElementsByTagName(&apos;li&apos;);        // var onOff = true;    // 只能控制一组！        for (var i = 0; i &lt; aLi.length; i++) {            aLi[i].onOff = true;//给每个要控制的元素都添加一个开关            aLi[i].onclick = function() {                // alert( this.style.background );                if (this.onOff) {                    this.style.background = &apos;url(img/active.png)&apos;;                    this.onOff = false;                } else {                    this.style.background = &apos;url(img/normal.png)&apos;;                    this.onOff = true;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;ul&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/03/02/自定义属性/kaiguan1.png" alt="">  </p><p><img src="/2018/03/02/自定义属性/kaiguan2.png" alt="">  </p><h3 id="应用2：获取自身递增数字及匹配数组内容"><a href="#应用2：获取自身递增数字及匹配数组内容" class="headerlink" title="应用2：获取自身递增数字及匹配数组内容"></a>应用2：获取自身递增数字及匹配数组内容</h3><p>相当于一个按钮就可以 控制一组东西的变化  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        var arr = [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;];        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].num = 0;            aBtn[i].onclick = function() {                // alert( arr[ this.num ] );                this.value = arr[this.num];                this.num++;                if (this.num === arr.length) {                    this.num = 0;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/02/自定义属性/zizeng.png" alt=""> </p><h3 id="应用3：添加索引值、匹配数组"><a href="#应用3：添加索引值、匹配数组" class="headerlink" title="应用3：添加索引值、匹配数组"></a>应用3：添加索引值、匹配数组</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].index = i; // 自定义属性（索引值）            aBtn[i].onclick = function() {                // alert( i );                            alert(this.index); //添加索引值，自定义索引值            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;btn1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/02/自定义属性/index1.png" alt="">  </p><p><img src="/2018/03/02/自定义属性/index2.png" alt="">  </p><h4 id="索引的引用"><a href="#索引的引用" class="headerlink" title="索引的引用"></a>索引的引用</h4><p>想建立“匹配”“对应”关系，就用索引值  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        var arr = [&apos;莫涛&apos;, &apos;张森&apos;, &apos;杜鹏&apos;];        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].index = i; // 自定义属性（索引值）            aBtn[i].onclick = function() {                // alert( arr[ this.index ] );                this.value = arr[this.index];            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;btn1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/02/自定义属性/pipei1.png" alt="">  </p><p><img src="/2018/03/02/自定义属性/pipei2.png" alt="">  </p><h4 id="通过索引将按钮和P匹配"><a href="#通过索引将按钮和P匹配" class="headerlink" title="通过索引将按钮和P匹配"></a>通过索引将按钮和P匹配</h4><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        var aP = document.getElementsByTagName(&apos;p&apos;);        var arr = [&apos;马云&apos;, &apos;马化腾&apos;, &apos;李彦宏&apos;];        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].index = i; // 自定义属性（索引值）            aBtn[i].onclick = function() {                // alert( arr[ this.index ] );                this.value = arr[this.index];                aP[this.index].innerHTML = arr[this.index];            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;btn1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn3&quot; /&gt;    &lt;p&gt;a&lt;/p&gt;    &lt;p&gt;b&lt;/p&gt;    &lt;p&gt;c&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;  hexo </code></pre><p><img src="/2018/03/02/自定义属性/pipei3.png" alt="">  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    ul {        padding: 0;        margin: 0;    }/*样式的重置*/    li {        list-style: none;    }    body {        background: #333;    }    #pic {        width: 400px;        height: 500px;        position: relative;        margin: 0 auto;        background: url(img/loader_ico.gif) no-repeat center #fff;    }    #pic img {        width: 400px;        height: 500px;    }    #pic ul {        width: 40px;        position: absolute;        top: 0;        right: -50px;    }    #pic li {        width: 40px;        height: 40px;        margin-bottom: 4px;        background: #666;    }    #pic .active {        background: #FC3;    }    #pic span {        top: 0;    }    #pic p {        bottom: 0;        margin: 0;    }    #pic p,    #pic span {        position: absolute;        left: 0;        width: 400px;        height: 30px;        line-height: 30px;        text-align: center;        color: #fff;        background: #000;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var oDiv = document.getElementById(&apos;pic&apos;);        var oImg = oDiv.getElementsByTagName(&apos;img&apos;)[0];        var oSpan = oDiv.getElementsByTagName(&apos;span&apos;)[0];        var oP = oDiv.getElementsByTagName(&apos;p&apos;)[0];        var oUl = oDiv.getElementsByTagName(&apos;ul&apos;)[0];        var aLi = oUl.getElementsByTagName(&apos;li&apos;);        var arrUrl = [&apos;img/1.png&apos;, &apos;img/2.png&apos;, &apos;img/3.png&apos;, &apos;img/4.png&apos;];        var arrText = [&apos;小宠物&apos;, &apos;图片二&apos;, &apos;图片三&apos;, &apos;面具&apos;];        var num = 0;        var oldLi = null;        for (var i = 0; i &lt; arrUrl.length; i++) {            oUl.innerHTML += &apos;&lt;li&gt;&lt;/li&gt;&apos;;        }        oldLi = aLi[num];        // 初始化        oImg.src = arrUrl[num];        oSpan.innerHTML = 1 + num + &apos; / &apos; + arrUrl.length;        oP.innerHTML = arrText[num];        aLi[num].className = &apos;active&apos;;        for (var i = 0; i &lt; aLi.length; i++) {            aLi[i].index = i; // 索引值            aLi[i].onclick = function() {                oImg.src = arrUrl[this.index];                oP.innerHTML = arrText[this.index];                oSpan.innerHTML = 1 + this.index + &apos; / &apos; + arrText.length;                /*                    &lt;li class=&quot;active&quot;&gt;&lt;/li&gt;                    &lt;li&gt;&lt;/li&gt;                    &lt;li&gt;&lt;/li&gt;                    &lt;li&gt;&lt;/li&gt;                */                // 思路一：全部清空，当前添加                for (var i = 0; i &lt; aLi.length; i++) {                    aLi[i].className = &apos;&apos;;                }                this.className = &apos;active&apos;;                /*                // 思路二：清空上个，当前添加                oldLi.className = &apos;&apos;;                oldLi = this;                this.className = &apos;active&apos;;                */            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;pic&quot;&gt;        &lt;img src=&quot;&quot; /&gt;        &lt;span&gt;数量正在加载中……&lt;/span&gt;        &lt;p&gt;文字说明正在加载中……&lt;/p&gt;        &lt;ul&gt;&lt;/ul&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content:encoded>
      
      <comments>http://yoursite.com/2018/03/02/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
