<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>运算符流程控制</title>
      <link href="/2018/03/05/%E8%BF%90%E7%AE%97%E7%AC%A6%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <content type="html"><![CDATA[<h3 id="取余"><a href="#取余" class="headerlink" title="取余"></a>取余</h3><p>效果：鼠标划过，隔行改变颜色，鼠标离开，恢复原来的灰色。<a id="more"></a>   </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aLi = document.getElementsByTagName(&apos;li&apos;);        var arr = [&apos;red&apos;, &apos;yellow&apos;, &apos;blue&apos;];        for (var i = 0; i &lt; aLi.length; i++) {            aLi[i].index = i;            aLi[i].style.background = arr[i % arr.length];            aLi[i].onmouseover = function() {                this.style.background = &apos;gray&apos;;            };            aLi[i].onmouseout = function() {                this.style.background = arr[this.index % arr.length];            };        }    };    &lt;/script&gt;    &lt;style&gt;    li {        height: 24px;        margin-bottom: 3px;        list-style: none;    }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;ul id=&quot;ul1&quot;&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/05/运算符流程控制/quyu.gif" alt="">  </p><p>### </p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 运算符 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>js作用域</title>
      <link href="/2018/03/04/js%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
      <content type="html"><![CDATA[<h3 id="预解析机制"><a href="#预解析机制" class="headerlink" title="预解析机制"></a>预解析机制</h3><a id="more"></a>  <h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>域：空间、范围、区域……<br>作用：读、写<br>script        全局变量、全局函数,自上而下<br>函数  由里到外<br>浏览器：“JS解析器”<br>1）“找一些东西”    ：var  function 参数<br>a = …<br>所有的变量，在正式运行代码之前，都提前赋了一个值：未定义<br>fn1 = function fn1(){ alert(2); }<br>所有的函数，在正式运行代码之前，都是整个函数块<br>JS 的预解析<br>遇到重名的：只留一个<br>变量和函数重名了，就只留下函数</p><p>2）逐行解读代码：<br>表达式：= + - * / % ++ – ! 参数……<br>表达式可以修改预解析的值！  </p><h4 id="小例子"><a href="#小例子" class="headerlink" title="小例子"></a>小例子</h4><pre><code>    alert(a);                    // 输出   function a (){ alert(4); }//因为预解析之后，变量和函数重名了就只留下函数，所以a是整个函数块   function a(){alert(4)};    var a = 1;     alert(a);                    // 输出  1//表达式var a=1;修改了预解析的值    function a (){ alert(2); }    alert(a);                    // 输出  1//    函数不修改值    var a = 3;            alert(a);                    // 输出  3//表达式var a=3;修改了预解析的值    function a (){ alert(4); }    alert(a);                    // 输出  3//函数不修改值    alert( typeof a );          //number    // a();                                    // 报错  </code></pre><h3 id="js单线程运行"><a href="#js单线程运行" class="headerlink" title="js单线程运行"></a>js单线程运行</h3><pre><code>&lt;script&gt;alert(a);   //报错&lt;/script&gt;&lt;script&gt;var a=1;   //1alert(a);&lt;/script&gt;</code></pre><p>前一个script区域运行完之后，值会保存。</p><pre><code>&lt;script&gt;var a=1;   //1alert(a);&lt;/script&gt;  &lt;script&gt;alert(a);   //1&lt;/script&gt;</code></pre><h3 id="函数也是一个局部的域"><a href="#函数也是一个局部的域" class="headerlink" title="函数也是一个局部的域"></a>函数也是一个局部的域</h3><p>函数调用：预解析+逐行解读代码<br>1)预解析： var function 参数….<br>a=…<br>fn1=function(){<br>  alert(a);<br>  var a=2；<br>}<br>2）逐行解读代码：<br>表达式<br>函数调用<br>2.1）预解析：<br>  a=…  这里的a是局部变量<br>2.2)逐行解读代码：<br>  a=2;</p><pre><code>var a = 1;function fn1(){    alert(a);                        // undefined    var a = 2;                      //a=2}fn1();alert(a);                            // 1</code></pre><p>下面看看  不加var的影响<br>1)预解析： var function 参数….<br>a=…<br>fn1=function(){<br>  alert(a);<br>  a=2；<br>}<br>2）逐行解读代码：<br>表达式<br>函数调用<br>2.1）局部预解析：<br>因为函数里面没有var 所有没有找到，<br>2.2)局部逐行解读代码：<br>  a=2;</p><pre><code>var a = 1;function fn1(){    alert(a);                        // 1  所以返回父级去找。由里到外（作用域链）找到外面那个a    a = 2;                          //这里修改的是外面的那个a}fn1();alert(a);                            // 2  </code></pre><p>小结：先找东西，后执行。执行过程中遇到表达式就会去修改原来库里面的东西，如果遇到函数调用就开了一个新的作用域，一旦新的作用域开始了，又会重复以上步骤，新的作用域中如果没找到里面有东西，又会返回父级里面去找。  </p><h3 id="带参数的函数"><a href="#带参数的函数" class="headerlink" title="带参数的函数"></a>带参数的函数</h3><p>1)预解析： var function 参数….<br>a=…<br>fn1=function(a){<br>  alert(a);<br>  a=2；<br>}<br>2）逐行解读代码：<br>表达式<br>函数调用<br>2.1）局部预解析：<br>因为函数里面没有var ,也没有找到函数，所有没有找到。参数本质上就是一个局部变量。找到了参数，但是这个例子里函数调用并没有传进来。<br>参数 a=…未定义<br>2.2)局部逐行解读代码：<br>  局部变量a就是undefined  </p><pre><code>var a = 1;                           //全局变量a=1function fn1(a){    alert(a);                        // undefined    a = 2;                          //这句把a改成2}fn1();alert(a);                            // 这里读取父级的a=1  </code></pre><h3 id="函数调用带参数"><a href="#函数调用带参数" class="headerlink" title="函数调用带参数"></a>函数调用带参数</h3><p>1)预解析： var function 参数….<br>a=…<br>fn1=function(a){<br>  alert(a);<br>  a=2；<br>}<br>2）逐行解读代码：<br>表达式<br>函数调用fn1(a)<br>2.1）局部预解析：<br>参数本质上就是一个局部变量，因为这个例子里面传递了参数进来，所以a=undefined。<br>参数 a=…未定义<br>2.2)局部逐行解读代码：<br>因为传递进来的a=1,所以局部变量a=1,再下一步就是局部变量a=2。  全局变量a仍然是1</p><pre><code> var a = 1;function fn1(a){    alert(a);                        // 1    a = 2;}fn1(a);alert(a);                            // 1</code></pre><h3 id="任何函数都可以改全局变量"><a href="#任何函数都可以改全局变量" class="headerlink" title="任何函数都可以改全局变量"></a>任何函数都可以改全局变量</h3><p>因为函数内部没有这个变量的话，会从里往外找。</p><pre><code>var num = 0;function fn1(){    num++;}function fn2(){    num--;}fn2();fn1();fn2();alert(num);  </code></pre><h3 id="获取函数内的值"><a href="#获取函数内的值" class="headerlink" title="获取函数内的值"></a>获取函数内的值</h3><p>巧妙利用全局变量来去获取函数内的内容</p><pre><code>var str = &apos;&apos;;function fn1(){    var a = &apos;大鸡腿~&apos;;    str = a;}fn1();alert( str );   //大鸡腿</code></pre><p>另一种方法：</p><pre><code>function fn2(){    var a = &apos;9999999克拉钻石23456789&apos;;    fn3(a);}fn2();function fn3(a){    alert(a);}  </code></pre><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>if(){}和for(){}、do{}while不是作用域，函数是作用域。<br>firefox不能对下面的函数进行预解析,除了火狐以外，其他的浏览器都可以。   </p><pre><code>alert( fn1 );        // FF 不能对下面的函数进行预解析if( true ){    var a = 1;    function fn1(){    alert(123);}}  </code></pre><p>解决这个兼容性问题的方法是：以后尽量不要在if语句里面定义函数，全局变量。改成下面这种写法：  </p><h3 id="for里面包了一个函数，在函数里面不要直接使用i"><a href="#for里面包了一个函数，在函数里面不要直接使用i" class="headerlink" title="for里面包了一个函数，在函数里面不要直接使用i"></a>for里面包了一个函数，在函数里面不要直接使用i</h3><p>下例会出现undefined的原因是：点击事件函数是一个作用域，只要有作用域，就会有域解析，点击事件函数里面域解析的时候会找到var i=undefined,所以这里alert(i)是undefined。但是如果把for循环里面的var去掉的话，那么点击事件函数里面就没有变量，所以i就会到父级里面去找，父级i是3,所以此时alert(i)会弹出3。</p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].onclick = function() {                 alert( i );                                for (var i = 0; i &lt; aBtn.length; i++) {                    aBtn[i].style.background = &apos;yellow&apos;;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/04/js作用域/zuoyongyu.gif" alt=""><br>但是如果把js代码改成以下就会出错  </p><pre><code>&lt;script&gt;window.onload = function() {    var aBtn = document.getElementsByTagName(&apos;input&apos;);    for (var i = 0; i &lt; aBtn.length; i++) {        aBtn[i].onclick = function() {             alert( i );                // 3             aBtn[i].style.background = &apos;yellow&apos;;          };    }};&lt;/script&gt;  </code></pre><p><img src="/2018/03/04/js作用域/ccuowu.gif" alt=""> </p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 作用域 </tag>
            
            <tag> 预解析 </tag>
            
            <tag> 易错点 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>函数传参项目</title>
      <link href="/2018/03/04/%E5%87%BD%E6%95%B0%E4%BC%A0%E5%8F%82%E9%A1%B9%E7%9B%AE/"/>
      <content type="html"><![CDATA[<h3 id="搜狐视频纪录片列表展示"><a href="#搜狐视频纪录片列表展示" class="headerlink" title="搜狐视频纪录片列表展示"></a>搜狐视频纪录片列表展示</h3><a id="more"></a> <p><img src="/2018/03/04/函数传参项目/souhu.gif" alt=""></p><h3 id="修改文本框的值"><a href="#修改文本框的值" class="headerlink" title="修改文本框的值"></a>修改文本框的值</h3><p><img src="/2018/03/04/函数传参项目/修改文本框的值.gif" alt=""></p><h3 id="选择卡里套选择卡"><a href="#选择卡里套选择卡" class="headerlink" title="选择卡里套选择卡"></a>选择卡里套选择卡</h3><p><img src="/2018/03/04/函数传参项目/选择卡里套选择卡.gif" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 练习项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 函数传参 </tag>
            
            <tag> 前端练习小项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>绝对定位与相对定位</title>
      <link href="/2018/03/04/%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D%E4%B8%8E%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D/"/>
      <content type="html"><![CDATA[<p>通常情况下，元素的position属性的值默认为static，也就是没有定位，元素出现再正常的文档流中，这个时候如果给元素设置left、right、bottom、top这些偏移属性，都不会生效，z-index也不会生效。<a id="more"></a></p><h3 id="相对定位relative"><a href="#相对定位relative" class="headerlink" title="相对定位relative"></a>相对定位relative</h3><p>注意：使用相对定位时，就算元素被偏移了，但是它仍然会占据着没偏移之前的空间。  </p><p><img src="/2018/03/04/绝对定位与相对定位/relative1.png" alt=""></p><p><img src="/2018/03/04/绝对定位与相对定位/relative2.png" alt=""><br>上图，第二个块针对本身的位置发生了一个偏移，但是它原来所占据的那个位置空间仍然还在，即使它完全离开原来的位置，但是它原来位于文档流中的位置仍然会存在，不会被第三个浮动过来填补掉；同时它的偏移也不会把别的块从文档流中原来的位置挤开，如果有重叠的地方它会重叠再其他文档流元素之上，可以通关过设置z-index属性来调整他的堆叠顺序。  </p><h3 id="绝对定位absolute"><a href="#绝对定位absolute" class="headerlink" title="绝对定位absolute"></a>绝对定位absolute</h3><p>被设置了绝对定位的元素，在文档流中是不占据空间的，如果某元素设置了绝对定位，那么它在文档流中的位置会被删除，其实这个元素是浮了起来，它与relative的不同点在于：相对定位不会删除它本身在文档流中占据的那块空间，而绝对定位则会删除该元素在文档流中的位置，完全从文档流中抽出来。 </p><p>绝对定位是如何定位的？  </p><p>一、如果它的父级元素设置了除static之外的定位，比如position：relative 或者position：absolute或者position：fixed,那么它就会相对于它的父级元素来定位，位置通过left、top、right、bottom（刚好一个顺时针）属性来规定。</p><p>二、如果它的父级元素没有设置定位，那么就得看它父元素得父元素有没有设置定位，如果还是没有，就继续向更高层得祖先元素类推。  </p><p>小结：总之它的定位就是相对于设置了除static定位之外得定位得第一个祖先元素，如果以上情况都不存在，那么他就会相对于文档body来定位（并非窗口，相对于窗口来定位得是fixed）绝对定位得元素相对于谁来定位，我们就把这个“谁”叫做参照物。  </p><p><img src="/2018/03/04/绝对定位与相对定位/juedui1.png" alt=""><br>下面是使用了绝对定位得效果：  </p><p><img src="/2018/03/04/绝对定位与相对定位/juedui2.png" alt="">  </p><p><img src="/2018/03/04/绝对定位与相对定位/juedui3.png" alt="">  </p><p>注意：在设置偏移量得时候，可以设置负值。  </p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
            <tag> 相对定位绝对定位 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>函数传参</title>
      <link href="/2018/03/04/%E5%87%BD%E6%95%B0%E4%BC%A0%E5%8F%82/"/>
      <content type="html"><![CDATA[<h3 id="函数传参"><a href="#函数传参" class="headerlink" title="函数传参"></a>函数传参</h3><a id="more"></a><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    /*        函数传递参数        参数=JS的数据类型：            数字、字符串、布尔、函数、对象、未定义    */    fn1(100, &apos;px&apos;);    function fn1(a, b) {        // alert( a+b );    }    fn2(&apos;miaov&apos;);    fn2(&apos;妙味课堂&apos;);    function fn2(a) {        // alert(a.charAt(2));    }    //传递一个有名字的函数，不用带括号    function fn4() {        alert(4);    }    fn3(fn4);    fn3(function(a) { alert(a); });    function fn3(fn) {        fn(100);        fn();    }    //传递对象    fn5(window, document);    function fn5(w, d) {        w.onload = function() {            d.body.innerHTML = 123;        };    }    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><h3 id="代码重用"><a href="#代码重用" class="headerlink" title="代码重用"></a>代码重用</h3><p>1、尽量保证 HTML 代码结构一致，可以通过父级选取子元素<br>2、把核心主程序实现，用函数包起来<br>3、把每组里不同的值找出来，通过传参实现  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    ul {        padding: 0;        margin: 0;    }    li {        list-style: none;    }    body {        background: #333;    }    .box {        width: 400px;        height: 500px;        position: relative;        background: url(img/loader_ico.gif) no-repeat center #fff;        float: left;        margin-right: 60px;    }    .box img {        width: 400px;        height: 500px;    }    .box ul {        width: 40px;        position: absolute;        top: 0;        right: -50px;    }    .box li {        width: 40px;        height: 40px;        margin-bottom: 4px;        background: #666;    }    .box .active {        background: #FC3;    }    .box span {        top: 0;    }    .box p {        bottom: 0;        margin: 0;    }    .box p,    .box span {        position: absolute;        left: 0;        width: 400px;        height: 30px;        line-height: 30px;        text-align: center;        color: #fff;        background: #000;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        fnTab(&apos;pic1&apos;, [&apos;img/1.png&apos;, &apos;img/2.png&apos;, &apos;img/3.png&apos;, &apos;img/4.png&apos;], [&apos;小宠物&apos;, &apos;图片二&apos;, &apos;图片三&apos;, &apos;面具&apos;], &apos;onclick&apos;);        fnTab(&apos;pic2&apos;, [&apos;img/2.png&apos;, &apos;img/3.png&apos;, &apos;img/4.png&apos;], [&apos;图片二&apos;, &apos;图片三&apos;, &apos;面具&apos;], &apos;onmouseover&apos;);    };    function fnTab(id, arrUrl, arrText, evt) {        var oDiv = document.getElementById(id);        var oImg = oDiv.getElementsByTagName(&apos;img&apos;)[0];        var oSpan = oDiv.getElementsByTagName(&apos;span&apos;)[0];        var oP = oDiv.getElementsByTagName(&apos;p&apos;)[0];        var oUl = oDiv.getElementsByTagName(&apos;ul&apos;)[0];        var aLi = oUl.getElementsByTagName(&apos;li&apos;);        var num = 0;        for (var i = 0; i &lt; arrUrl.length; i++) {            oUl.innerHTML += &apos;&lt;li&gt;&lt;/li&gt;&apos;;        }        // 初始化        function fnTab() {            oImg.src = arrUrl[num];            oSpan.innerHTML = 1 + num + &apos; / &apos; + arrUrl.length;            oP.innerHTML = arrText[num];            for (var i = 0; i &lt; aLi.length; i++) {                aLi[i].className = &apos;&apos;;            }            aLi[num].className = &apos;active&apos;;        }        fnTab();        for (var i = 0; i &lt; aLi.length; i++) {            aLi[i].index = i; // 索引值            aLi[i][evt] = function() {                num = this.index;                fnTab();            };        }    }    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;pic1&quot; class=&quot;box&quot;&gt;        &lt;img src=&quot;&quot; /&gt;        &lt;span&gt;数量正在加载中……&lt;/span&gt;        &lt;p&gt;文字说明正在加载中……&lt;/p&gt;        &lt;ul&gt;&lt;/ul&gt;    &lt;/div&gt;    &lt;div id=&quot;pic2&quot; class=&quot;box&quot;&gt;        &lt;img src=&quot;&quot; /&gt;        &lt;span&gt;数量正在加载中……&lt;/span&gt;        &lt;p&gt;文字说明正在加载中……&lt;/p&gt;        &lt;ul&gt;&lt;/ul&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/04/函数传参/hanshu.gif" alt="">  </p><h3 id="应用：仿淘宝购物车计算"><a href="#应用：仿淘宝购物车计算" class="headerlink" title="应用：仿淘宝购物车计算"></a>应用：仿淘宝购物车计算</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var oUl = document.getElementById(&apos;list&apos;);        var aLi = oUl.getElementsByTagName(&apos;li&apos;);        for (var i = 0; i &lt; aLi.length; i++) {            fn1(aLi[i]);        }        function fn1(oLi) {            var aBtn = oLi.getElementsByTagName(&apos;input&apos;);            var oStrong = oLi.getElementsByTagName(&apos;strong&apos;)[0];            var oEm = oLi.getElementsByTagName(&apos;em&apos;)[0];            var oSpan = oLi.getElementsByTagName(&apos;span&apos;)[0];            var n1 = Number(oStrong.innerHTML); //动态获取 &apos;0&apos;        =&gt;   0            var n2 = parseFloat(oEm.innerHTML); //动态获取   &apos;12.5元&apos; =&gt; 12.5            aBtn[0].onclick = function() {                n1--;                if (n1 &lt; 0) {                    n1 = 0;                }                oStrong.innerHTML = n1;                oSpan.innerHTML = n1 * n2 + &apos;元&apos;;            };            aBtn[1].onclick = function() {                n1++;                oStrong.innerHTML = n1;                oSpan.innerHTML = n1 * n2 + &apos;元&apos;;            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;ul id=&quot;list&quot;&gt;        &lt;li&gt;            &lt;input type=&quot;button&quot; value=&quot;-&quot; /&gt;            &lt;strong&gt;0&lt;/strong&gt;            &lt;input type=&quot;button&quot; value=&quot;+&quot; /&gt; 单价：            &lt;em&gt;12.5元&lt;/em&gt; 小计：            &lt;span&gt;0元&lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;button&quot; value=&quot;-&quot; /&gt;            &lt;strong&gt;0&lt;/strong&gt;            &lt;input type=&quot;button&quot; value=&quot;+&quot; /&gt; 单价：            &lt;em&gt;10.5元&lt;/em&gt; 小计：            &lt;span&gt;0元&lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;button&quot; value=&quot;-&quot; /&gt;            &lt;strong&gt;0&lt;/strong&gt;            &lt;input type=&quot;button&quot; value=&quot;+&quot; /&gt; 单价：            &lt;em&gt;8.5元&lt;/em&gt; 小计：            &lt;span&gt;0元&lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;button&quot; value=&quot;-&quot; /&gt;            &lt;strong&gt;0&lt;/strong&gt;            &lt;input type=&quot;button&quot; value=&quot;+&quot; /&gt; 单价：            &lt;em&gt;8元&lt;/em&gt; 小计：            &lt;span&gt;0元&lt;/span&gt;        &lt;/li&gt;        &lt;li&gt;            &lt;input type=&quot;button&quot; value=&quot;-&quot; /&gt;            &lt;strong&gt;0&lt;/strong&gt;            &lt;input type=&quot;button&quot; value=&quot;+&quot; /&gt; 单价：            &lt;em&gt;14.5元&lt;/em&gt; 小计：            &lt;span&gt;0元&lt;/span&gt;        &lt;/li&gt;    &lt;/ul&gt;    &lt;p&gt;        商品合计共：0件，共花费了：0元        &lt;br /&gt; 其中最贵的商品单价是：0元    &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/04/函数传参/gouwuche.gif" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 函数传参 </tag>
            
            <tag> 前端练习小项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数据类型转换练习</title>
      <link href="/2018/03/03/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E7%BB%83%E4%B9%A0/"/>
      <content type="html"><![CDATA[<h3 id="找到合适的值"><a href="#找到合适的值" class="headerlink" title="找到合适的值"></a>找到合适的值</h3><a id="more"></a><pre><code>&lt;!--more--&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    body {        font-size: 20px;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var arr = [&apos;100px&apos;, &apos;abc&apos; - 6, [], -98765, 34, -2, 0, &apos;300&apos;, , function() { alert(1); }, null, document, [], true, &apos;200px&apos; - 30, &apos;23.45元&apos;, 5, Number(&apos;abc&apos;), function() { alert(3); }, &apos;xyz&apos; - 90];        var ob = document.getElementsByTagName(&apos;body&apos;)[0];        var a1 = [];        var a2 = [];        var a3 = [];        var a4 = [];        var max = 0;        /*            1、找到arr里所有的数字：-98765, 34, -2, 0, 5            2、找到可以转成数字的：&apos;100px&apos;, -98765, 34, -2, 0, &apos;300&apos;, &apos;23.45元&apos;,  5             3、把转成数字以后，最大值判断出来：300            4、把 NaN 所在的位置找出来：1 14 17  19        */        //题目一：用函数把数字选择出来，由于NaN在数字类型，所以用ISNaN把NAN去除掉        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;1、找到arr里所有的数字:  &apos;        for (var i = 0; i &lt; arr.length; i++) {            if (typeof arr[i] == &apos;number&apos; &amp;&amp; !isNaN(arr[i])) {                a1.push(arr[i]);            }        }        for (var i = 0; i &lt; a1.length; i++) {            ob.innerHTML += a1[i] + &apos; ,&apos;;        }        //题目二：用函数把可以数字转换的找出来，再单独找0,要把中括号去除呢        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;2、找到可以转成数字的:  &apos;        for (var i = 0; i &lt; arr.length; i++) {            if (parseFloat(arr[i]) || (arr[i] == 0 &amp;&amp; typeof arr[i] == &apos;number&apos;)) {                a2.push(arr[i]);            }        }        for (var i = 0; i &lt; a2.length; i++) {            ob.innerHTML += a2[i] + &apos; ,&apos;;        }        //题目三：用函数把可以数字转换出来，再单独找0输入        for (var i = 0; i &lt; a2.length; i++) {            if (parseFloat(a2[i]) || a2[i] == 0) {                a3.push(parseFloat(a2[i]));            }        }        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;3、把转换数字后的数组为:  &apos;        for (var i = 0; i &lt; a3.length; i++) {            if (max &lt; a3[i]) {                max = a3[i];            }            ob.innerHTML += a3[i] + &apos; ,&apos;;        }        ob.innerHTML += &apos;  排序后最大值：&apos; + max;        //题目四：把 NaN 所在的位置找出来：1 14 17  19        ob.innerHTML += &apos;&lt;br/&gt;&apos; + &apos;4、把 NaN 所在的位置找出来:  &apos;        for (var i = 0; i &lt; arr.length; i++) {            if (isNaN(arr[i]) &amp;&amp; typeof arr[i] == &apos;number&apos;) {                a4.push(i);            }        }        for (var i = 0; i &lt; a4.length; i++) {            ob.innerHTML += a4[i] + &apos; ,&apos;;        }    }    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/03/数据类型转换练习/zhuanhuan.png" alt=""></p><h3 id="QQ号码"><a href="#QQ号码" class="headerlink" title="QQ号码"></a>QQ号码</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;&lt;/head&gt;&lt;script&gt;window.onload = function() {    var oText = document.getElementById(&apos;t&apos;)    var oBtn = document.getElementById(&apos;b&apos;)    var count = 0;    oBtn.onclick = function() {        if (oText.value == &apos;&apos;) {            alert(&apos;没有输入&apos;)            count++;        }        if (isNaN(oText.value)) {            alert(&apos;非数字&apos;)            count++;        }        if (oText.value.charAt(0) == 0) {            alert(&apos;不能有0在前面&apos;)            count++;        }        if (parseFloat(oText.value) != parseInt(oText.value)) {            alert(&apos;不能是小数&apos;)            count++;        }        if (oText.value.length &lt; 5 || oText.value.length &gt; 10) {            alert(&apos;输入的数字必须在5位以上、10位以内&apos;)            count++;        }        if (count == 0) {            alert(&apos;输入的号码正确呢&apos;)        }    }}&lt;/script&gt;&lt;body&gt;    请输入QQ号码：    &lt;input type=&quot;text&quot; value=&quot;&quot; id=&quot;t&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;判断&quot; id=&quot;b&quot; /&gt;    &lt;br /&gt; 1、有没有输入    &lt;br /&gt; 2、输入的是不是数字    &lt;br /&gt; 3、不能有0在前面    &lt;br /&gt; 4、不能是小数    &lt;br /&gt; 5、输入的数字必须在5位以上、10位以内    &lt;br /&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 练习项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 前端练习小项目 </tag>
            
            <tag> 数据类型转换 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>区块链简介</title>
      <link href="/2018/03/02/%E5%8C%BA%E5%9D%97%E9%93%BE%E7%AE%80%E4%BB%8B/"/>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>js数据类型、类型转换</title>
      <link href="/2018/03/02/js%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
      <content type="html"><![CDATA[<h3 id="js数据类型以及相关操作"><a href="#js数据类型以及相关操作" class="headerlink" title="js数据类型以及相关操作"></a>js数据类型以及相关操作</h3><a id="more"></a>  <pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;script&gt;/*ECMAScript：标准、核心HTML 标签类型：block、inline、inline-block、table……JS中的数据类型：数字、字符串、布尔、函数、对象(obj、[]、{}、null)、未定义typeof 判断数据类型*/var i = 100;// alert( typeof i );            // numbervar s = &apos; miaov &apos;;// alert( typeof s );                // string// alert( s.length );                // 7// alert( s.charAt(3) );        // &apos;a&apos;var b = true;                // 布尔值：true  false// alert( typeof b );        // booleanif ( true ) {}for ( ; false ; ) {  }var fn = function (){ alert(1); };// fn();function fn1(){    alert(2);}// alert( fn1 );// fn1();var obj = document;// alert( typeof obj );                // object  物体、东西、对象obj.abc = 123;obj.onOff = true;obj.fn1 = function (){ alert(1); };// alert( document.onOff );        // 123// obj.fn1();var arr = [ 1,2,3,4 ];// alert( arr.length );// arr[2] = 345;// alert( arr );// arr.push( 5,6,7 );// alert( arr );// alert( typeof arr );        // objectarr.abc = 999;arr.fn1 = function (){ alert(&apos;ok&apos;); };// alert( arr.abc );// arr.fn1();var json = { name:&apos;miaov&apos;, age:5  };// alert( json.name + &apos;今年&apos; + json.age + &apos;岁了&apos; );// alert( typeof json );//objectvar n = null;// alert( typeof n );//空的东西不能添加属性var u;// alert( typeof u );            // undefined 未定义// 表示你写的程序出问题了~~&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><h3 id="数据类型转换-显式类型转换"><a href="#数据类型转换-显式类型转换" class="headerlink" title="数据类型转换(显式类型转换)"></a>数据类型转换(显式类型转换)</h3><h4 id="字符串变成数字"><a href="#字符串变成数字" class="headerlink" title="字符串变成数字"></a>字符串变成数字</h4><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;script&gt;var a = &apos;+100&apos;;// alert( a+100 );        // &apos;100100&apos;// alert( Number(a) );            // 100var a1 = &apos;    &apos;;// alert( Number(a1) );        // 0var a2 = true;// alert( Number(a2) );            // true-1  false-0var a3=[];alert(Number(a3));             //0var a3=[&apos;&apos;];alert(Number(a3));             //0var a3 = [ 1 ];// alert( Number(a3) );            // 1 var a4 = null;// alert( Number(a4) );                // 0var a3=function(){alert(1);};alert(Number(a3));              //NaN  ////////////////////////////////////////////////////////////////////////////var json = {};// alert( Number(json) );   //NaNvar u;// alert( Number(u) );   //NaNvar a3 = function (){ alert(1); };// alert( Number(a3) );            // NaN&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="parseInt与parseFloat的区别与小技巧"><a href="#parseInt与parseFloat的区别与小技巧" class="headerlink" title="parseInt与parseFloat的区别与小技巧"></a>parseInt与parseFloat的区别与小技巧</h4><pre><code> var b = &apos; 200px&apos;; alert( parseInt(b) );      //200  默认十进制 var b = &apos; 200px&apos;; alert( parseInt(b，16进制) );      //200  十六进制var b = &apos; 200px1234567&apos;; alert( parseInt(b) );      //200  var c = &apos;12.34元&apos;;// alert( parseInt(c) );    //12var c = &apos;12.34元&apos;;// alert( parseFloat(c) );  //12.34var c = &apos;12.3.4元&apos;;// alert( parseFloat(c) );  //12.3</code></pre><p>验证是整数还是小数</p><pre><code>var num = &apos;200.45&apos;;    if( parseInt(num) == parseFloat(num) ){    alert( num + &apos;是整数&apos; );}else{    alert( num + &apos;是小数&apos; );}</code></pre><h3 id="js中稀奇古怪的隐式类型转换"><a href="#js中稀奇古怪的隐式类型转换" class="headerlink" title="js中稀奇古怪的隐式类型转换"></a>js中稀奇古怪的隐式类型转换</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    /*    显式类型转换（强制类型转换）：    Number()    parseInt()    parseFloat()    隐式类型转换：        +                                200 + &apos;3&apos;        变成字符串        - * / %                &apos;200&apos; - 3     变成数字        ++ --                        变成数字        &gt; &lt;                         数字的比较 、字符串的比较        !    取反                    把右边的数据类型转成布尔值        ==         */    // alert( Number(&apos;……&apos;) );            NaN    // alert( &apos;……&apos;-9 );                                    NaN    // alert( &apos;2&apos; == 2 );//字符串的比较    // alert( &apos;10000000&apos; &gt; &apos;9&apos; );//false 一位一位地比较    // 数字的比较与字符串的比较    // &apos;1000000&apos;   &apos;9&apos;    // alert( &apos;2&apos; == 2 );  //true   判断值，所以两个等号可以转换    alert(&apos;2&apos;===2); //三个等号更严谨，先去判断类型，再去判断值    alert(!&apos;ok&apos;);   //false    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    // JS中的数据类型：数字（NaN）、字符串、布尔、函数、对象(obj、[]、{}、null)、未定义    var a = Number(&apos;abc&apos;);    // alert( a );            // NaN    // NaN：not a number 不是个 数字 的 数字类型    // alert( typeof (a) );            // number    // 一旦写程序中出现：NaN  肯定进行了非法的运算操作    // alert( &apos;200px&apos; -  100 );    // NaN 是 false    if (a) {        alert( &apos;真&apos; );    } else {        alert( &apos;假&apos; );    }    var abc = [];    // alert( abc === abc );                true    // NaN 与自己都不相等！！除了NaN以外，其他的数据类型都是自己和自己相等的    alert(a === a); // false    isNaN();//判断某些值是不是数字类型  不是数字true  是数字 false    //在内部是根据Number来进行转换，转换之后进行判断    alert(isNaN(&apos;250&apos;));//&apos;250&apos;--250--false    alert(isNaN(true));//true--1--false    alert(isNaN([]));//[]--0--false    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><h4 id="isNaN-小应用"><a href="#isNaN-小应用" class="headerlink" title="isNaN()小应用"></a>isNaN()小应用</h4><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aInp = document.getElementsByTagName(&apos;input&apos;);        var str = &apos;&apos;;        aInp[1].onclick = function() {            str = aInp[0].value;            // HTML 中拿到的内容，类型都是字符串            // alert( typeof str );            if (isNaN(str)) {                alert(str + &apos;不是数字&apos;);            } else {                alert(str + &apos;是数字&apos;);            }        };    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;text&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;判断输入值是不是数字&quot; /&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>简单实现QQ好友列表</title>
      <link href="/2018/03/02/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0QQ%E5%A5%BD%E5%8F%8B%E5%88%97%E8%A1%A8/"/>
      <content type="html"><![CDATA[<h3 id="简单实现QQ好友列表"><a href="#简单实现QQ好友列表" class="headerlink" title="简单实现QQ好友列表"></a>简单实现QQ好友列表</h3><p>需求：实现折叠与展开，实现点击高亮显示  <a id="more"></a></p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    ul,    h2 {  /*样式重置*/        padding: 0;        margin: 0;    }    li {/* 去掉列表前面的点*/        list-style: none;    }    #list {        width: 240px;        border: 1px solid #333;        margin: 0 auto;    }    #list .lis {}    #list h2 {        height: 30px;        line-height: 30px;        text-indent: 20px;        background: url(img/ico1.gif) no-repeat 5px center #6FF;        color: #000;    }    #list .active {        background: url(img/ico2.gif) no-repeat 5px center #FF9;        color: #000;    }    #list ul {        display: none;    }    #list ul li {        line-height: 24px;        border-bottom: 1px solid #333;        text-indent: 24px;    }    #list ul .hover {        background: #6FF;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var oUl = document.getElementById(&apos;list&apos;);        var aH2 = oUl.getElementsByTagName(&apos;h2&apos;);        var aUl = oUl.getElementsByTagName(&apos;ul&apos;);        var aLi = null;        var arrLi = [];        for (var i = 0; i &lt; aH2.length; i++) {            aH2[i].index = i;            aH2[i].onclick = function() {                for (var i = 0; i &lt; aH2.length; i++) {                    if (i != this.index) {                        aUl[i].style.display = &apos;none&apos;;                        aH2[i].className = &apos;&apos;;                    }                }                if (this.className == &apos;&apos;) { /*这里两个等号或者三个等号都可以*/                    aUl[this.index].style.display = &apos;block&apos;;                    this.className = &apos;active&apos;;                } else {                    aUl[this.index].style.display = &apos;none&apos;;                    this.className = &apos;&apos;;                }            };        }        for (var i = 0; i &lt; aUl.length; i++) {            aLi = aUl[i].getElementsByTagName(&apos;li&apos;);            for (var j = 0; j &lt; aLi.length; j++) {                arrLi.push(aLi[j]);            }        }        for (var i = 0; i &lt; arrLi.length; i++) {            arrLi[i].onclick = function() {                for (var i = 0; i &lt; arrLi.length; i++) {                    if (arrLi[i] != this) {                        arrLi[i].className = &apos;&apos;;                    }                }                if (this.className == &apos;&apos;) {                    this.className = &apos;hover&apos;;                } else {                    this.className = &apos;&apos;;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;ul id=&quot;list&quot;&gt;        &lt;li class=&quot;lis&quot;&gt;            &lt;h2&gt;我的好友&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;张三&lt;/li&gt;                &lt;li&gt;张三&lt;/li&gt;                &lt;li&gt;张三&lt;/li&gt;                &lt;li&gt;张三&lt;/li&gt;            &lt;/ul&gt;        &lt;/li&gt;        &lt;li class=&quot;lis&quot;&gt;            &lt;h2&gt;企业好友&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;                &lt;li&gt;李四&lt;/li&gt;            &lt;/ul&gt;        &lt;/li&gt;        &lt;li class=&quot;lis&quot;&gt;            &lt;h2&gt;黑名单&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;张小三&lt;/li&gt;                &lt;li&gt;李小四&lt;/li&gt;            &lt;/ul&gt;        &lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/03/02/简单实现QQ好友列表/yanshi.gif" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 练习项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> for </tag>
            
            <tag> 前端练习小项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自定义属性</title>
      <link href="/2018/03/02/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/"/>
      <content type="html"><![CDATA[<h3 id="什么是自定义属性"><a href="#什么是自定义属性" class="headerlink" title="什么是自定义属性"></a>什么是自定义属性</h3><p>通俗地讲，就是js往html上添加东西。js可以为任何html元素添加任意个自定义属性。例如下面程序的abc、xyz就是自定义属性 <a id="more"></a> </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].abc = 123;            aBtn[i].xyz = true;        }         alert(aBtn[0].abc);    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;按钮3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/03/02/自定义属性/zidingyi.png" alt=""></p><h3 id="应用1-自定义一组开关应用"><a href="#应用1-自定义一组开关应用" class="headerlink" title="应用1:自定义一组开关应用"></a>应用1:自定义一组开关应用</h3><p>注意不能当作判断条件的有1、背景不能判断 2、color不能判断 3、相对路径不能当作判断条件  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    li {        list-style: none;        width: 114px;        height: 140px;        background: url(img/normal.png);        float: left;        margin-right: 20px;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var aLi = document.getElementsByTagName(&apos;li&apos;);        // var onOff = true;    // 只能控制一组！        for (var i = 0; i &lt; aLi.length; i++) {            aLi[i].onOff = true;//给每个要控制的元素都添加一个开关            aLi[i].onclick = function() {                // alert( this.style.background );                if (this.onOff) {                    this.style.background = &apos;url(img/active.png)&apos;;                    this.onOff = false;                } else {                    this.style.background = &apos;url(img/normal.png)&apos;;                    this.onOff = true;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;ul&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/03/02/自定义属性/kaiguan1.png" alt="">  </p><p><img src="/2018/03/02/自定义属性/kaiguan2.png" alt="">  </p><h3 id="应用2：获取自身递增数字及匹配数组内容"><a href="#应用2：获取自身递增数字及匹配数组内容" class="headerlink" title="应用2：获取自身递增数字及匹配数组内容"></a>应用2：获取自身递增数字及匹配数组内容</h3><p>相当于一个按钮就可以 控制一组东西的变化  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        var arr = [&apos;A&apos;, &apos;B&apos;, &apos;C&apos;, &apos;D&apos;];        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].num = 0;            aBtn[i].onclick = function() {                // alert( arr[ this.num ] );                this.value = arr[this.num];                this.num++;                if (this.num === arr.length) {                    this.num = 0;                }            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;0&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/02/自定义属性/zizeng.png" alt=""> </p><h3 id="应用3：添加索引值、匹配数组"><a href="#应用3：添加索引值、匹配数组" class="headerlink" title="应用3：添加索引值、匹配数组"></a>应用3：添加索引值、匹配数组</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].index = i; // 自定义属性（索引值）            aBtn[i].onclick = function() {                // alert( i );                            alert(this.index); //添加索引值，自定义索引值            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;btn1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/02/自定义属性/index1.png" alt="">  </p><p><img src="/2018/03/02/自定义属性/index2.png" alt="">  </p><h4 id="索引的引用"><a href="#索引的引用" class="headerlink" title="索引的引用"></a>索引的引用</h4><p>想建立“匹配”“对应”关系，就用索引值  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        var arr = [&apos;莫涛&apos;, &apos;张森&apos;, &apos;杜鹏&apos;];        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].index = i; // 自定义属性（索引值）            aBtn[i].onclick = function() {                // alert( arr[ this.index ] );                this.value = arr[this.index];            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;btn1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn3&quot; /&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/03/02/自定义属性/pipei1.png" alt="">  </p><p><img src="/2018/03/02/自定义属性/pipei2.png" alt="">  </p><h4 id="通过索引将按钮和P匹配"><a href="#通过索引将按钮和P匹配" class="headerlink" title="通过索引将按钮和P匹配"></a>通过索引将按钮和P匹配</h4><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var aBtn = document.getElementsByTagName(&apos;input&apos;);        var aP = document.getElementsByTagName(&apos;p&apos;);        var arr = [&apos;马云&apos;, &apos;马化腾&apos;, &apos;李彦宏&apos;];        for (var i = 0; i &lt; aBtn.length; i++) {            aBtn[i].index = i; // 自定义属性（索引值）            aBtn[i].onclick = function() {                // alert( arr[ this.index ] );                this.value = arr[this.index];                aP[this.index].innerHTML = arr[this.index];            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input type=&quot;button&quot; value=&quot;btn1&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn2&quot; /&gt;    &lt;input type=&quot;button&quot; value=&quot;btn3&quot; /&gt;    &lt;p&gt;a&lt;/p&gt;    &lt;p&gt;b&lt;/p&gt;    &lt;p&gt;c&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;  hexo </code></pre><p><img src="/2018/03/02/自定义属性/pipei3.png" alt="">  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    ul {        padding: 0;        margin: 0;    }/*样式的重置*/    li {        list-style: none;    }    body {        background: #333;    }    #pic {        width: 400px;        height: 500px;        position: relative;        margin: 0 auto;        background: url(img/loader_ico.gif) no-repeat center #fff;    }    #pic img {        width: 400px;        height: 500px;    }    #pic ul {        width: 40px;        position: absolute;        top: 0;        right: -50px;    }    #pic li {        width: 40px;        height: 40px;        margin-bottom: 4px;        background: #666;    }    #pic .active {        background: #FC3;    }    #pic span {        top: 0;    }    #pic p {        bottom: 0;        margin: 0;    }    #pic p,    #pic span {        position: absolute;        left: 0;        width: 400px;        height: 30px;        line-height: 30px;        text-align: center;        color: #fff;        background: #000;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var oDiv = document.getElementById(&apos;pic&apos;);        var oImg = oDiv.getElementsByTagName(&apos;img&apos;)[0];        var oSpan = oDiv.getElementsByTagName(&apos;span&apos;)[0];        var oP = oDiv.getElementsByTagName(&apos;p&apos;)[0];        var oUl = oDiv.getElementsByTagName(&apos;ul&apos;)[0];        var aLi = oUl.getElementsByTagName(&apos;li&apos;);        var arrUrl = [&apos;img/1.png&apos;, &apos;img/2.png&apos;, &apos;img/3.png&apos;, &apos;img/4.png&apos;];        var arrText = [&apos;小宠物&apos;, &apos;图片二&apos;, &apos;图片三&apos;, &apos;面具&apos;];        var num = 0;        var oldLi = null;        for (var i = 0; i &lt; arrUrl.length; i++) {            oUl.innerHTML += &apos;&lt;li&gt;&lt;/li&gt;&apos;;        }        oldLi = aLi[num];        // 初始化        oImg.src = arrUrl[num];        oSpan.innerHTML = 1 + num + &apos; / &apos; + arrUrl.length;        oP.innerHTML = arrText[num];        aLi[num].className = &apos;active&apos;;        for (var i = 0; i &lt; aLi.length; i++) {            aLi[i].index = i; // 索引值            aLi[i].onclick = function() {                oImg.src = arrUrl[this.index];                oP.innerHTML = arrText[this.index];                oSpan.innerHTML = 1 + this.index + &apos; / &apos; + arrText.length;                /*                    &lt;li class=&quot;active&quot;&gt;&lt;/li&gt;                    &lt;li&gt;&lt;/li&gt;                    &lt;li&gt;&lt;/li&gt;                    &lt;li&gt;&lt;/li&gt;                */                // 思路一：全部清空，当前添加                for (var i = 0; i &lt; aLi.length; i++) {                    aLi[i].className = &apos;&apos;;                }                this.className = &apos;active&apos;;                /*                // 思路二：清空上个，当前添加                oldLi.className = &apos;&apos;;                oldLi = this;                this.className = &apos;active&apos;;                */            };        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;pic&quot;&gt;        &lt;img src=&quot;&quot; /&gt;        &lt;span&gt;数量正在加载中……&lt;/span&gt;        &lt;p&gt;文字说明正在加载中……&lt;/p&gt;        &lt;ul&gt;&lt;/ul&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 自定义属性 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>黑客入门电子书整理</title>
      <link href="/2018/03/01/%E9%BB%91%E5%AE%A2%E5%85%A5%E9%97%A8%E7%94%B5%E5%AD%90%E4%B9%A6%E6%95%B4%E7%90%86/"/>
      <content type="html"><![CDATA[<h3 id="黑客攻防电子书整理"><a href="#黑客攻防电子书整理" class="headerlink" title="黑客攻防电子书整理"></a>黑客攻防电子书整理</h3><a id="more"></a><p><img src="/2018/03/01/黑客入门电子书整理/heike.png" alt="">  </p><p><img src="/2018/03/01/黑客入门电子书整理/heike2.png" alt=""> </p><p>链接: <a href="https://pan.baidu.com/s/1sm2fjZ3" target="_blank" rel="noopener">https://pan.baidu.com/s/1sm2fjZ3</a> 密码: dvt3 </p>]]></content>
      
      <categories>
          
          <category> books </category>
          
          <category> hacker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hacker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>this指向及this应用</title>
      <link href="/2018/02/28/this%E6%8C%87%E5%90%91%E5%8F%8Athis%E5%BA%94%E7%94%A8/"/>
      <content type="html"><![CDATA[<h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><p>this可以理解为调用当前方法或者函数的那个对象，通俗地说就是谁调用了函数指的就是谁。例如下面程序的this指的是一个按钮。  <a id="more"></a></p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    // this    : 这个    // this： 指的是调用 当前 方法（函数）的那个对象    function fn1() {        // this    }    // fn1();            this =&gt; window    // oDiv.onclick = fn1;            this =&gt; oDiv    /*    oDiv.onclick = function (){        fn1();                    fn1() 里的this =&gt; window    };    &lt;div onclick=&quot;    this     fn1();      &quot;&gt;&lt;/div&gt;     fn1(); 里的 this 指的是 window    */    // alert( this );        // object window    // window 是 JS “老大”    // window.alert( this );    function fn1() {        alert(this); // window    }    // fn1();    // window.fn1();    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;按钮&quot; /&gt;    &lt;input id=&quot;btn2&quot; type=&quot;button&quot; onclick=&quot; fn1(); &quot; value=&quot;按钮2&quot; /&gt;    &lt;script&gt;    var oBtn = document.getElementById(&apos;btn1&apos;);    // oBtn.onclick = fn1;    oBtn.onclick = function() {        // this        fn1();    };    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> this </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>for循环遍历二维数组、嵌套元素</title>
      <link href="/2018/02/28/for%E5%BE%AA%E7%8E%AF%E9%81%8D%E5%8E%86%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E3%80%81%E5%B5%8C%E5%A5%97%E5%85%83%E7%B4%A0/"/>
      <content type="html"><![CDATA[<h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>即数组里面的数组，例如常见的好友列表就是这种结构。  <a id="more"></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [</span></span><br><span class="line"><span class="actionscript">        [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">'4+'</span>],</span></span><br><span class="line"><span class="undefined">        [4, 5, 6],</span></span><br><span class="line"><span class="undefined">        [7, 8, 9]</span></span><br><span class="line"><span class="undefined">    ];</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// arr[1][2]</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// arr[i][0]</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// arr[i][1]</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// arr[i][2]</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; arr[i].length; j++) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert( arr[i][j] );</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// for( var i=0; )&#123;&#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// for( var i=0; )&#123;&#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">'list'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> aUl = oUl.getElementsByTagName(<span class="string">'ul'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> len = aUl.length;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> aLi = <span class="literal">null</span>; <span class="comment">// 空</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span></span><br><span class="line"><span class="actionscript">            aLi = aUl[i].getElementsByTagName(<span class="string">'li'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; aLi.length; j++) &#123;</span></span><br><span class="line"><span class="actionscript">                aLi[j].style.border = <span class="string">'1px solid red'</span>;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的好友<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>莫涛<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>张森<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>杜鹏<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>no<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>no<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>no<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的白名单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>莫小涛<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>张小森<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>no<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>no<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>no<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>我的黑名单<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>莫张<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2018/02/28/for循环遍历二维数组、嵌套元素/erwei.png" alt="">  </p><h3 id="cssText"><a href="#cssText" class="headerlink" title="cssText"></a>cssText</h3><p>在下例中，cssText只是针对div的行间样式做修改，并没有动style里面的样式。后面的cssText会替换掉前面的cssText。 </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    div {        width: 100px;        height: 100px;        border: 1px solid #333;    }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;123&lt;/div&gt;    &lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;按钮&quot; /&gt;    &lt;script&gt;    var oDiv = document.getElementById(&apos;div1&apos;);    var oBtn = document.getElementById(&apos;btn1&apos;);    oDiv.onclick = function() {        // oDiv.style.width = &apos;200px&apos;;        oDiv.style.cssText = &apos; width:200px;height:200px;&apos;;    };    oBtn.onclick = function() {        // oDiv.style.width = &apos;100px&apos;;        oDiv.style.cssText = &apos;&apos;;  //这里的cssText会替换掉上面的cssText，类似于innerHTML    };    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="例子：自动上生成一组新闻"><a href="#例子：自动上生成一组新闻" class="headerlink" title="例子：自动上生成一组新闻"></a>例子：自动上生成一组新闻</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function() {        var oBtn = document.getElementById(&apos;btn1&apos;);        var oUl = document.getElementById(&apos;list&apos;);        var arr = [            &apos;山西省委附近多次爆炸 官方称尚不确定是恐怖袭击&apos;,            &apos;甘肃张掖明令禁止转基因 书记:无力辨别只能禁止&apos;,            &apos;多地制定雾霾预案限行限排被批治标不治本&apos;,            &apos;韩媒抱怨中国雾霾侵袭韩国 称其为&quot;黑色灾难&quot; &apos;,            &apos;伊朗革命卫队高官在叙利亚当&quot;志愿者&quot;被杀(图)&apos;        ];        var onOff = true;        oBtn.onclick = function() {            // oBtn.disabled = true;            // oBtn.style.display = &apos;none&apos;;  //思路1、按钮找麻烦            // oUl.innerHTML = &apos;&apos;;      //思路2、先清空，再生成，不过影响性能            // onOff = false;                no!!!!            if (onOff) {                 //思路3、另设一个变量，做判断                // onOff = false;                ok                for (var i = 0; i &lt; arr.length; i++) {                    oUl.innerHTML += &apos;&lt;li&gt;&apos; + arr[i] + &apos;&lt;/li&gt;&apos;;                }                // onOff = false;                ok            }            onOff = false;        };    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;input id=&quot;btn1&quot; type=&quot;button&quot; value=&quot;自动生成5条新闻&quot; /&gt;    &lt;ul id=&quot;list&quot; style=&quot;border:1px solid red;&quot;&gt;&lt;/ul&gt;    &lt;script&gt;    alert(document.getElementById(&apos;list&apos;).style.border);    &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;  </code></pre><p><img src="/2018/02/28/for循环遍历二维数组、嵌套元素/xinwen.png" alt=""> </p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> for </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>for应用（逢十、V字）</title>
      <link href="/2018/02/28/for%E5%BA%94%E7%94%A8%EF%BC%88%E9%80%A2%E5%8D%81%E3%80%81V%E5%AD%97%EF%BC%89/"/>
      <content type="html"><![CDATA[<h4 id="逢十往下一行"><a href="#逢十往下一行" class="headerlink" title="逢十往下一行"></a>逢十往下一行</h4><p>用js生成100个div，每行十个。  <a id="more"></a></p><pre><code class="html"><span class="meta">&lt;!DOCTYPE HTML&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">head</span>&gt;</span>    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span>    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span><span class="undefined">    div {</span><span class="undefined">        width: 50px;</span><span class="undefined">        height: 50px;</span><span class="undefined">        background: red;</span><span class="undefined">        position: absolute;</span><span class="undefined">        top: 0;</span><span class="undefined">        left: 0;</span><span class="undefined">        font-size: 30px;</span><span class="undefined">        text-align: center;</span><span class="undefined">        line-height: 50px;</span><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span><span class="undefined">    }</span><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><span class="javascript">        <span class="keyword">var</span> aDiv = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>);</span><span class="undefined"></span><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) {</span><span class="javascript">            <span class="built_in">document</span>.body.innerHTML += <span class="string">'&lt;div&gt;'</span> + i + <span class="string">'&lt;/div&gt;'</span>;</span><span class="undefined">        }</span><span class="undefined"></span><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; aDiv.length; i++) {</span><span class="actionscript">            <span class="keyword">var</span> m = i % <span class="number">10</span>;</span><span class="javascript">            <span class="keyword">var</span> n = <span class="built_in">parseInt</span>(i / <span class="number">10</span>);</span><span class="actionscript">            aDiv[i].style.left = m * <span class="number">50</span> + <span class="string">'px'</span>;</span><span class="actionscript">            aDiv[i].style.top = <span class="number">10</span> + n * <span class="number">50</span> + <span class="string">'px'</span>;</span><span class="undefined">        }</span><span class="undefined"></span><span class="undefined"></span><span class="undefined">    };</span><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></code></pre><p><img src="/2018/02/28/for应用（逢十、V字）/fengshi.png" alt="">  </p><p>小拓展：可以用这种方法来写一个元素周期表的效果<br>小结：<br>求余数  </p><pre><code>document.write(1%4); //结果为1</code></pre><p>求商  </p><pre><code>console.info(1/4);//结果为0.25  </code></pre><p>求商，取整  </p><pre><code>console.info(parseInt(1/4));//结果为0  </code></pre><p>天花板取整  </p><pre><code>console.info(Math.ceil(1/4));//结果为1</code></pre><p>地板取整  </p><pre><code>console.info(Math.floor(1/4));//结果为0</code></pre><h4 id="V字形"><a href="#V字形" class="headerlink" title="V字形"></a>V字形</h4><p>js生成20个div,用js写一个v字形图案  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    div {        width: 50px;        height: 50px;        background: red;        position: absolute;        top: 0;        left: 0;        font-size: 30px;        text-align: center;        line-height: 50px;        color: #fff;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var aDiv = document.getElementsByTagName(&apos;div&apos;);        for (var i = 0; i &lt; 20; i++) {            document.body.innerHTML += &apos;&lt;div&gt;&apos; + i + &apos;&lt;/div&gt;&apos;;        }        for (var i = 0; i &lt; aDiv.length / 2; i++) {            aDiv[i].style.left = i * 50 + &apos;px&apos;;            aDiv[i].style.top = i * 50 + &apos;px&apos;;        }        for (var i = aDiv.length / 2; i &lt; aDiv.length; i++) {            aDiv[i].style.left = i * 50 + &apos;px&apos;;            aDiv[i].style.top = 50*aDiv.length - (i+1) * 50 + &apos;px&apos;;        }    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="/2018/02/28/for应用（逢十、V字）/vzi.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 练习项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> for </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>js的for循环</title>
      <link href="/2018/02/26/js%E7%9A%84for%E5%BE%AA%E7%8E%AF/"/>
      <content type="html"><![CDATA[<h3 id="for应用：选取、生成、性能"><a href="#for应用：选取、生成、性能" class="headerlink" title="for应用：选取、生成、性能"></a>for应用：选取、生成、性能</h3><h4 id="方法1：document-body-innerHTML添加"><a href="#方法1：document-body-innerHTML添加" class="headerlink" title="方法1：document.body.innerHTML添加"></a>方法1：document.body.innerHTML添加</h4><p>使用这种方法添加多个元素的时候，性能不好。因为每一次添加元素的时候都要访问一次body <a id="more"></a> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 性能有问题！！！</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">for</span>( <span class="keyword">var</span> i=<span class="number">0</span>; i&lt;<span class="number">6000</span>; i++ )&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">document.body.innerHTML += '<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"按钮"</span> /&gt;</span>';</span></span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法2：只访问一次body"><a href="#方法2：只访问一次body" class="headerlink" title="方法2：只访问一次body"></a>方法2：只访问一次body</h4><p>这个方法比上个方法，性能好很多，即使添加多个元素速度也很快 </p><pre><code>&lt;!DOCTYPE HTML&gt;    &lt;html&gt;    &lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;script&gt;    window.onload = function (){                    var str = &apos;&apos;;        for( var i=0; i&lt;6000; i++ ){            str += &apos;&lt;input type=&quot;button&quot; value=&quot;按钮&quot; /&gt;&apos;;        }                document.body.innerHTML = str;        };    &lt;/script&gt;            &lt;/head&gt;            &lt;body&gt;    &lt;/body&gt;    &lt;/html&gt;</code></pre><p><img src="/2018/02/26/js的for循环/anniu.png" alt=""><br>小tips：可以利用循环来生成视频网站每个播放页面的每个第几集的按钮。  </p><h3 id="for循环生成坐标"><a href="#for循环生成坐标" class="headerlink" title="for循环生成坐标"></a>for循环生成坐标</h3><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;    &lt;title&gt;无标题文档&lt;/title&gt;    &lt;style&gt;    div {        width: 50px;        height: 50px;        background: red;        position: absolute;        top: 0;        left: 0;        font-size: 30px;        text-align: center;        line-height: 50px;        color: #fff;    }    &lt;/style&gt;    &lt;script&gt;    window.onload = function() {        var aDiv = document.getElementsByTagName(&apos;div&apos;);        for (var i = 0; i &lt; 11; i++) {            document.body.innerHTML += &apos;&lt;div&gt;&apos; + i + &apos;&lt;/div&gt;&apos;;        }        for (var i = 0; i &lt; aDiv.length; i++) {            aDiv[i].style.left = 10 + i * 50 + &apos;px&apos;;            aDiv[i].style.top = 10 + i * 50 + &apos;px&apos;;        }        // 逢10 往下一行（小练习）        // 来一个小V字形（小练习）    };    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="for循环遍历二维数组，嵌套元素"><a href="#for循环遍历二维数组，嵌套元素" class="headerlink" title="for循环遍历二维数组，嵌套元素"></a>for循环遍历二维数组，嵌套元素</h3>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> for循环 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>图片切换及函数合并</title>
      <link href="/2018/02/26/%E5%9B%BE%E7%89%87%E5%88%87%E6%8D%A2%E5%8F%8A%E5%87%BD%E6%95%B0%E5%90%88%E5%B9%B6/"/>
      <content type="html"><![CDATA[<h3 id="图片切换"><a href="#图片切换" class="headerlink" title="图片切换  "></a>图片切换  <a id="more"></a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    p &#123;</span></span><br><span class="line"><span class="undefined">        margin: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    body &#123;</span></span><br><span class="line"><span class="undefined">        text-align: center;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#box</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 400px;</span></span><br><span class="line"><span class="undefined">        height: 400px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">        margin: 50px auto 0;</span></span><br><span class="line"><span class="undefined">        position: relative;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    a &#123;</span></span><br><span class="line"><span class="undefined">        width: 40px;</span></span><br><span class="line"><span class="undefined">        height: 40px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">filter</span>: <span class="selector-tag">alpha</span>(<span class="selector-tag">opacity</span><span class="selector-pseudo">:80)</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span></span><br><span class="line"><span class="undefined">        position: absolute;</span></span><br><span class="line"><span class="undefined">        top: 160px;</span></span><br><span class="line"><span class="undefined">        font-size: 18px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="undefined">        text-align: center;</span></span><br><span class="line"><span class="undefined">        line-height: 40px;</span></span><br><span class="line"><span class="undefined">        text-decoration: none;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">filter</span>: <span class="selector-tag">alpha</span>(<span class="selector-tag">opacity</span><span class="selector-pseudo">:30)</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">opacity</span>: 0<span class="selector-class">.3</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#prev</span> &#123;</span></span><br><span class="line"><span class="undefined">        left: 10px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#next</span> &#123;</span></span><br><span class="line"><span class="undefined">        right: 10px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#p1</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 400px;</span></span><br><span class="line"><span class="undefined">        height: 30px;</span></span><br><span class="line"><span class="undefined">        line-height: 30px;</span></span><br><span class="line"><span class="undefined">        text-align: center;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">        font-size: 14px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">filter</span>: <span class="selector-tag">alpha</span>(<span class="selector-tag">opacity</span><span class="selector-pseudo">:80)</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span></span><br><span class="line"><span class="undefined">        position: absolute;</span></span><br><span class="line"><span class="undefined">        bottom: 0;</span></span><br><span class="line"><span class="undefined">        left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    strong &#123;</span></span><br><span class="line"><span class="undefined">        width: 400px;</span></span><br><span class="line"><span class="undefined">        height: 30px;</span></span><br><span class="line"><span class="undefined">        line-height: 30px;</span></span><br><span class="line"><span class="undefined">        text-align: center;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">        font-size: 14px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">filter</span>: <span class="selector-tag">alpha</span>(<span class="selector-tag">opacity</span><span class="selector-pseudo">:80)</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">opacity</span>: 0<span class="selector-class">.8</span>;</span></span><br><span class="line"><span class="undefined">        position: absolute;</span></span><br><span class="line"><span class="undefined">        top: 0;</span></span><br><span class="line"><span class="undefined">        left: 0;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-id">#img1</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 400px;</span></span><br><span class="line"><span class="undefined">        height: 400px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    span &#123;</span></span><br><span class="line"><span class="undefined">        position: absolute;</span></span><br><span class="line"><span class="undefined">        width: 400px;</span></span><br><span class="line"><span class="undefined">        height: 30px;</span></span><br><span class="line"><span class="undefined">        line-height: 30px;</span></span><br><span class="line"><span class="undefined">        text-align: center;</span></span><br><span class="line"><span class="undefined">        top: -50px;</span></span><br><span class="line"><span class="undefined">        left: 0;</span></span><br><span class="line"><span class="undefined">        font-family: '微软雅黑';</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oPrev = <span class="built_in">document</span>.getElementById(<span class="string">'prev'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oNext = <span class="built_in">document</span>.getElementById(<span class="string">'next'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">'p1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oStrong = <span class="built_in">document</span>.getElementById(<span class="string">'strong1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oImg = <span class="built_in">document</span>.getElementById(<span class="string">'img1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> aBtn = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'input'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arrUrl = [<span class="string">'img/1.jpg'</span>, <span class="string">'img/2.jpg'</span>, <span class="string">'img/3.jpg'</span>, <span class="string">'img/4.jpg'</span>];</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arrText = [<span class="string">'文字一'</span>, <span class="string">'文字二'</span>, <span class="string">'文字三'</span>, <span class="string">'识文断字'</span>];</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> num = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> onOff = <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        aBtn[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123; onOff = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementsByTagName(<span class="string">'span'</span>)[<span class="number">0</span>].innerHTML = <span class="string">'图片可从最后一张跳转到第一张循环切换'</span>; &#125;;</span></span><br><span class="line"><span class="actionscript">        aBtn[<span class="number">1</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123; onOff = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.getElementsByTagName(<span class="string">'span'</span>)[<span class="number">0</span>].innerHTML = <span class="string">'图片只能到最后一张\或只能到第一张切换'</span>; &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 初始化</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">fnTab</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            oP.innerHTML = arrText[num];</span></span><br><span class="line"><span class="actionscript">            oStrong.innerHTML = num + <span class="number">1</span> + <span class="string">' / '</span> + arrText.length;</span></span><br><span class="line"><span class="undefined">            oImg.src = arrUrl[num];</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        fnTab();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oPrev.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            num--;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (num == <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (onOff) &#123; num = arrText.length - <span class="number">1</span>; &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'这已经是第一张了，不能再往前了~~'</span>);</span></span><br><span class="line"><span class="undefined">                    num = 0;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//num = arrText.length-1;</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            fnTab();</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="actionscript">        oNext.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            num++;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (num == arrText.length) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">if</span> (onOff) &#123; num = <span class="number">0</span>; &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    alert(<span class="string">'已经到最后一张啦~'</span>);</span></span><br><span class="line"><span class="undefined">                    num = arrText.length - 1;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            fnTab();</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"循环切换"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"顺序切换"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>图片可从最后一张跳转到第一张循环切换<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"prev"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span></span><br><span class="line">            &lt;&lt;/a&gt;</span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"next"</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span>&gt;</span>&gt;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>图片文字加载中……<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">"strong1"</span>&gt;</span>图片数量计算中……<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"img1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 图片切换 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>动态方法ByTagName</title>
      <link href="/2018/02/25/%E5%8A%A8%E6%80%81%E6%96%B9%E6%B3%95ByTagName/"/>
      <content type="html"><![CDATA[<h3 id="ById与ByTagName"><a href="#ById与ByTagName" class="headerlink" title="ById与ByTagName"></a>ById与ByTagName</h3><h4 id="区别1：ById前面就只能跟document，不能跟别的元素；ByTagName前面可以跟别的元素。"><a href="#区别1：ById前面就只能跟document，不能跟别的元素；ByTagName前面可以跟别的元素。" class="headerlink" title="区别1：ById前面就只能跟document，不能跟别的元素；ByTagName前面可以跟别的元素。"></a>区别1：ById前面就只能跟document，不能跟别的元素；ByTagName前面可以跟别的元素。<a id="more"></a></h4><pre><code>var oUI=document.getElementById(&apos;list&apos;);document.getElementByTagName(&apos;li&apos;);var aLi=oUI.getElementsByTagName(&apos;li&apos;);</code></pre><h4 id="区别2：ById的方法找到的是一个元素，而ByTagName方法实际上找到的是多个东西，是元素的集合，在使用TagName的时候，必须要加上中括号-即使页面上只有一个该标签元素，其实找到的也是一个集合。也就是说以后只要见到ByTagName方法，后面必须要跟一个中括号。"><a href="#区别2：ById的方法找到的是一个元素，而ByTagName方法实际上找到的是多个东西，是元素的集合，在使用TagName的时候，必须要加上中括号-即使页面上只有一个该标签元素，其实找到的也是一个集合。也就是说以后只要见到ByTagName方法，后面必须要跟一个中括号。" class="headerlink" title="区别2：ById的方法找到的是一个元素，而ByTagName方法实际上找到的是多个东西，是元素的集合，在使用TagName的时候，必须要加上中括号[],即使页面上只有一个该标签元素，其实找到的也是一个集合。也就是说以后只要见到ByTagName方法，后面必须要跟一个中括号。"></a>区别2：ById的方法找到的是一个元素，而ByTagName方法实际上找到的是多个东西，是元素的集合，在使用TagName的时候，必须要加上中括号[],即使页面上只有一个该标签元素，其实找到的也是一个集合。也就是说以后只要见到ByTagName方法，后面必须要跟一个中括号。</h4><p>html部分： </p><pre><code>&lt;body&gt;    &lt;ul id=&quot;list&quot;&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;</code></pre><p>js部分：  </p><pre><code>window.onload = function() {//    var oUl = document.getElementById(&apos;list&apos;);var oUl = document.getElementsByTagName(&apos;ul&apos;)[0];var aLi = oUl.getElementsByTagName(&apos;li&apos;);</code></pre><p>如在下例中，document.getElementByTagName找到的li，既包含了ul里面的li，又包含了ol里面的li。<br>html部分：  </p><pre><code>&lt;body&gt;    &lt;ul id=&quot;list&quot;&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;    &lt;/ul&gt;    &lt;ol&gt;        &lt;li&gt;&lt;/li&gt;        &lt;li&gt;&lt;/li&gt;    &lt;/ol&gt;&lt;/body&gt;</code></pre><p>js部分：  </p><pre><code>window.onload = function() {document.getElementsByTagName(&apos;li&apos;);}</code></pre><p>区别3：ById是静态方法，ByTagName是动态方法  </p><pre><code>&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;&lt;title&gt;无标题文档&lt;/title&gt;&lt;script&gt;window.onload = function (){    // document.title = 123;    // document.body.innerHTML = &apos;abc&apos;;    var aBtn = document.getElementsByTagName(&apos;input&apos;);    // alert(aBtn.length);    document.body.innerHTML = &apos;&lt;input type=&quot;button&quot; value=&quot;按钮&quot; /&gt;&lt;input type=&quot;button&quot; value=&quot;按钮&quot; /&gt;&lt;input type=&quot;button&quot; value=&quot;按钮&quot; /&gt;&apos;;    // alert(aBtn.length);    aBtn[0].onclick = function (){ alert(1); };    aBtn[1].onclick = function (){ alert(1); };    aBtn[2].onclick = function (){ alert(1); };    // 重复执行某些代码    // 每次执行的时候，有个数字在变化};&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> ByTagName </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>模拟手机短信发送</title>
      <link href="/2018/02/25/%E6%A8%A1%E6%8B%9F%E6%89%8B%E6%9C%BA%E7%9F%AD%E4%BF%A1%E5%8F%91%E9%80%81/"/>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 练习项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端练习小项目 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>js条件判断</title>
      <link href="/2018/02/25/js%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD/"/>
      <content type="html"><![CDATA[]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 条件判断 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>百度文库下载破解</title>
      <link href="/2018/02/24/%E7%99%BE%E5%BA%A6%E6%96%87%E5%BA%93%E4%B8%8B%E8%BD%BD%E7%A0%B4%E8%A7%A3/"/>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>js属性操作</title>
      <link href="/2018/02/24/js%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C/"/>
      <content type="html"><![CDATA[<h3 id="HTML的属性操作：读、写"><a href="#HTML的属性操作：读、写" class="headerlink" title="HTML的属性操作：读、写"></a>HTML的属性操作：读、写</h3><p>属性：属性名+属性值。  </p><h4 id="属性的读操作"><a href="#属性的读操作" class="headerlink" title="属性的读操作"></a>属性的读操作</h4><p>读操作：获取、找到。元素.属性名 <a id="more"></a> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oText = <span class="built_in">document</span>.getElementById(<span class="string">'text1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oSelect = <span class="built_in">document</span>.getElementById(<span class="string">'select1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(oText.value + <span class="string">'在'</span> + oSelect.value);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"text1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"select1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"北京"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"上海"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"杭州"</span>&gt;</span>杭州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"按钮"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2018/02/24/js属性操作/ducaozuo.png" alt="">  </p><h4 id="属性的写操作"><a href="#属性的写操作" class="headerlink" title="属性的写操作"></a>属性的写操作</h4><p>(添加)替换、修改。元素.属性名=新的值。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oText = <span class="built_in">document</span>.getElementById(<span class="string">'text1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oSelect = <span class="built_in">document</span>.getElementById(<span class="string">'select1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//oBtn.value='button';</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//oText.value='按钮';</span></span></span><br><span class="line"><span class="undefined">            oText.value=oSelect.value;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"text1"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"select1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"北京"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"上海"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"杭州"</span>&gt;</span>杭州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"按钮"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="读写操作结合的例子"><a href="#读写操作结合的例子" class="headerlink" title="读写操作结合的例子"></a>读写操作结合的例子</h4><p>在文本框中输入图片地址，点击按钮切换图片。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oText = <span class="built_in">document</span>.getElementById(<span class="string">'text1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oImg = <span class="built_in">document</span>.getElementById(<span class="string">'img1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            oImg.src = oText.value;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"text1"</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"按钮"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一些文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"img1"</span> <span class="attr">src</span>=<span class="string">"img/1.jpg"</span> <span class="attr">width</span>=<span class="string">"200"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2018/02/24/js属性操作/duxie.png" alt="">  </p><h4 id="innerHTML"><a href="#innerHTML" class="headerlink" title="innerHTML"></a>innerHTML</h4><p>元素.innerHTML:可以读取元素内的所有HTML代码。元素.innerHTML=新的值：修改或者替换元素内的所有HTML内容。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oText = <span class="built_in">document</span>.getElementById(<span class="string">'text1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">'p1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// oImg.src = oText.value;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// alert( oP.innerHTML );</span></span></span><br><span class="line"><span class="undefined">            oP.innerHTML = oText.value;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"text1"</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"按钮"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>这是一些文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="/2018/02/24/js属性操作/inner1.png" alt="">  </p><p><img src="/2018/02/24/js属性操作/inner2.png" alt=""> </p><h4 id="例子-属性读写操作配合innerHTML"><a href="#例子-属性读写操作配合innerHTML" class="headerlink" title="例子:属性读写操作配合innerHTML"></a>例子:属性读写操作配合innerHTML</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#div1</span> &#123; <span class="attribute">width</span>:<span class="number">240px</span>; <span class="attribute">height</span>:<span class="number">200px</span>; <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#333</span>; <span class="attribute">background</span>:<span class="number">#f1f1f1</span>; <span class="attribute">padding</span>:<span class="number">10px</span>; &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oDiv = <span class="built_in">document</span>.getElementById(<span class="string">'div1'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oStrong = <span class="built_in">document</span>.getElementById(<span class="string">'strong1'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oText = <span class="built_in">document</span>.getElementById(<span class="string">'text1'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">oBtn.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 原来的内容，你得给我留着，然后再加上新内容</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// a = a + b</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// a += b</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">// 添加：+=</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// oDiv.innerHTML = oDiv.innerHTML + oText.value + '&lt;br /&gt;';</span></span></span><br><span class="line"><span class="actionscript">oDiv.innerHTML += oStrong.innerHTML + oText.value + <span class="string">'&lt;br /&gt;'</span>;</span></span><br><span class="line"><span class="actionscript">oText.value = <span class="string">''</span>;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span> <span class="attr">id</span>=<span class="string">"strong1"</span>&gt;</span>张三：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"text1"</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="属性操作注意事项"><a href="#属性操作注意事项" class="headerlink" title="属性操作注意事项"></a>属性操作注意事项</h3><h4 id="JS中不允许出现“-”，都是去掉“-”，后面的单词的首字母大写。"><a href="#JS中不允许出现“-”，都是去掉“-”，后面的单词的首字母大写。" class="headerlink" title="JS中不允许出现“-”，都是去掉“-”，后面的单词的首字母大写。"></a>JS中不允许出现“-”，都是去掉“-”，后面的单词的首字母大写。</h4><p>如：font-size      fontSize<br>padding-top       paddingTop<br>margin-left       marginLeft<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn1 = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn2 = <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">'p1'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> num = <span class="number">14</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn1.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            num -= 2;</span></span><br><span class="line"><span class="actionscript">            oP.style.fontSize = num + <span class="string">'px'</span>;      </span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="actionscript">        oBtn2.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;          </span></span><br><span class="line"><span class="undefined">            num += 2;</span></span><br><span class="line"><span class="actionscript">            oP.style.fontSize = num + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"-"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn2"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"+"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span> <span class="attr">style</span>=<span class="string">"font-size:16px;"</span>&gt;</span>10月28日晚，中央纪委监察部官网发布消息，贵州省委常委、遵义市委书记廖少华因涉嫌严重违纪违法接受组织调查。3天后中组部宣布对其免职。廖成为十八大后中纪委一连串"打虎"行动中第十一位落马的副省部级以上高官。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="js中的class作为保留字，不能用，样式名用className"><a href="#js中的class作为保留字，不能用，样式名用className" class="headerlink" title="js中的class作为保留字，不能用，样式名用className"></a>js中的class作为保留字，不能用，样式名用className</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn1 = <span class="built_in">document</span>.getElementById(<span class="string">'btn1'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn2 = <span class="built_in">document</span>.getElementById(<span class="string">'btn2'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn3 = <span class="built_in">document</span>.getElementById(<span class="string">'btn3'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn4 = <span class="built_in">document</span>.getElementById(<span class="string">'btn4'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">'p1'</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> num = <span class="number">14</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn1.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            num -= 2;</span></span><br><span class="line"><span class="actionscript">            oP.style.fontSize = num + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="actionscript">        oBtn2.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="undefined">            num += 2;</span></span><br><span class="line"><span class="actionscript">            oP.style.fontSize = num + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        oBtn3.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            oP.className = <span class="string">'red'</span>;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="actionscript">        oBtn4.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            oP.className = <span class="string">'yellow'</span>;</span></span><br><span class="line"><span class="undefined">        &#125;;</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 400px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#333</span>;</span></span><br><span class="line"><span class="undefined">        background: red;</span></span><br><span class="line"><span class="undefined">        padding: 20px;</span></span><br><span class="line"><span class="undefined">        color: yellow;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.yellow</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 500px;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 5<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#333</span>;</span></span><br><span class="line"><span class="undefined">        background: yellow;</span></span><br><span class="line"><span class="undefined">        padding: 10px;</span></span><br><span class="line"><span class="undefined">        color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"-"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn2"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"+"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn3"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"红"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"btn4"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"黄"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span> <span class="attr">style</span>=<span class="string">"font-size:16px;"</span>&gt;</span>10月28日晚，中央纪委监察部官网发布消息，贵州省委常委、遵义市委书记廖少华因涉嫌严重违纪违法接受组织调查。3天后中组部宣布对其免职。廖成为十八大后中纪委一连串"打虎"行动中第十一位落马的副省部级以上高官。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="不能作为判断条件的有"><a href="#不能作为判断条件的有" class="headerlink" title="不能作为判断条件的有:"></a>不能作为判断条件的有:</h4><p>1、所有的相对路径地址:img src href<br>2、颜色值：color：red  #f00 rgb(100,0,0)<br>3、innerHTML不能拿来做判断  </p><h4 id="js修改input的type-ie6-7-8无效"><a href="#js修改input的type-ie6-7-8无效" class="headerlink" title="js修改input的type(ie6/7/8无效)"></a>js修改input的type(ie6/7/8无效)</h4><p>点击按钮变成复选框的例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;input id=<span class="string">"inp1"</span> type=<span class="string">"button"</span>/&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> olp=<span class="built_in">document</span>.getElementById(<span class="string">'inp1'</span>);</span><br><span class="line">olnp.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  olnp.type=<span class="string">'checkbox'</span>;  <span class="comment">//注意：这里在ie6/7/8会报错！！！</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>如果要做上面那个效果，还要兼容ie6/7/8，可以这样巧妙地回避：点击按钮，让按钮隐藏起来，checkbox本来是隐藏的，点击按钮之后让他显示出来。  </p><h4 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h4><p>想要一个元素浮动，在IE下用styleFloat,非IE下用cssFloat,简而言之就是下面这样：同时写两句  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">    oDiv.style.styleFloat=<span class="string">'left'</span>;    <span class="comment">//兼容IE浏览器</span></span><br><span class="line">oDiv.style.cssFloat=<span class="string">'left'</span>;      <span class="comment">//兼容非IE浏览器下  </span></span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string">还可以采用下面的方法：通过改class，来修改浮动。  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span> javascript</span><br><span class="line">.left&#123;<span class="attr">float</span>:left;&#125;</span><br><span class="line">.right&#123;<span class="attr">float</span>:right;&#125;  </span><br><span class="line"><span class="string">``</span><span class="string">`  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#### 点后面的值无法修改  </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>html </span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;<span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script type="text/</span>javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    window.onload = function() &#123;</span></span><br><span class="line"><span class="string">        var oAttr = document.getElementById('attr');</span></span><br><span class="line"><span class="string">        var oVal = document.getElementById('val');</span></span><br><span class="line"><span class="string">        var oBtn = document.getElementById('btn1');</span></span><br><span class="line"><span class="string">        var oDiv = document.getElementById('div1');</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        oBtn.onclick = function() &#123;           </span></span><br><span class="line"><span class="string">            oDiv.style[oAttr.value] = oVal.value; //中括号里面的值可以随便改</span></span><br><span class="line"><span class="string">            //js中允许把点换成[]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">    请输入属性名称：</span></span><br><span class="line"><span class="string">    &lt;input type="</span>text<span class="string">" id="</span>attr<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">    &lt;br/&gt; 请输入属性值：</span></span><br><span class="line"><span class="string">    &lt;input type="</span>text<span class="string">" id="</span>val<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">    &lt;input type="</span>button<span class="string">" value="</span>确定<span class="string">" id="</span>btn1<span class="string">" /&gt;</span></span><br><span class="line"><span class="string">    &lt;div id="</span>div1<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 属性操作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端利器——6款开源web性能优化辅助工具</title>
      <link href="/2018/02/23/%E5%89%8D%E7%AB%AF%E5%88%A9%E5%99%A8%E2%80%94%E2%80%946%E6%AC%BE%E5%BC%80%E6%BA%90web%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BE%85%E5%8A%A9%E5%B7%A5%E5%85%B7/"/>
      <content type="html"><![CDATA[<p>Web 性能优化是一个老生常谈的话题，也是前端页面开发十分重要的部分。当页面加载速度越慢，用户流失的概率就越大，性能和交互直接影响用户体验。<br>下面推荐几款 Web 性能优化辅助工具推荐，希望能对大家有所帮助  </p><h4 id="Lighthouse"><a href="#Lighthouse" class="headerlink" title="Lighthouse"></a>Lighthouse</h4><p>Lighthouse 是 Google 开源的一个自动化工具，用于改进网络应用的质量。你可以将其作为一个 Chrome 扩展程序运行，或从命令行运行。<a id="more"></a></p><p>当为 Lighthouse 提供一个要审查的网址，它将针对此页面运行一连串的测试，然后生成一个有关页面性能的报告。可以参考失败的测试，看看可以采取哪些措施来改进应用。  </p><p>Chrom 扩展则会把报告以非常人性化的图形界面展示给你。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRKibxYFwdzvMX2PbAak3hgHs2obIJxZ8fTqE62hRcCdHgxY1BlKl4OWIVg29ZoGKcxrprlRKa2ZYuTw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p><p>传送门：www.oschina.net/p/lighthouse  </p><h4 id="Speed-Racer"><a href="#Speed-Racer" class="headerlink" title="Speed Racer"></a>Speed Racer</h4><p>SpeedRacer 是一款性能测试工具，它在 Chrome 中运行脚本，并生成详细的性能报告。  </p><p>SpeedRacer 是直接借助浏览器来实际测试性能的工具，在实际工作中，可以与其它模拟用户访问流量来评估性能的工具配合使用。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRKibxYFwdzvMX2PbAak3hgHs2eMnibRGSmDBZzwtrTNFU1Z27c4rDA418r3wHc9maibAQk4tc0DIbn2Tw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p><p>传送门：<a href="https://github.com/speedracer/speedracer" target="_blank" rel="noopener">https://github.com/speedracer/speedracer</a>  </p><h4 id="Yellow-Lab-Tools"><a href="#Yellow-Lab-Tools" class="headerlink" title="Yellow Lab Tools"></a>Yellow Lab Tools</h4><p>Yellow Lab Tools 是一款 Web 性能及前端质量测试工具。与其他工具不同的是，它有一些在其他工具上无法看到的独特功能，例如页面加载时 JavaScript 与 DOM 互动和其他程序代码验证问题。  </p><p>Yellow Lab Tools 偏向于一个发现不良实践的工具，会综合页面权重、请求数、DOM、错误的 Javascript、错误的 CSS 等方面取得一个评分。并显示出在加载页面的过程中，DOM 是如何相互影响。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_gif/dkwuWwLoRKibxYFwdzvMX2PbAak3hgHs2wdjqX4Cr8gd0UL3aWnibQ9udHSaRPKqmfBU5GWCbajXgsficudj9r8fw/640?wx_fmt=gif&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p><p>传送门：<a href="https://yellowlab.tools/" target="_blank" rel="noopener">https://yellowlab.tools/</a>  </p><h4 id="Web-Tracing-Framework"><a href="#Web-Tracing-Framework" class="headerlink" title="Web Tracing Framework"></a>Web Tracing Framework</h4><p>Web Tracing Framework 也是 Google 推出的一组用于跟踪和调查复杂 Web 应用的库、工具和可视化工具合集。它可以帮助发现性能问题，跟踪回归，并构建流畅的 60fps Web 应用。能让你花更少时间来测试代码即可。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRKibxYFwdzvMX2PbAak3hgHs2icIN99tX5dFXPcs2NmJQ4ROCULaPdjgMTYDHweH8gVNiaX1d1vKwtGJA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p><p>传送门：www.oschina.net/p/tracing-framework  </p><h4 id="grunt-perfbudget"><a href="#grunt-perfbudget" class="headerlink" title="grunt-perfbudget"></a>grunt-perfbudget</h4><p>grunt-perfbudget 是一款用于评估性能的 Grunt task，它使用 WebPagetest 的公有或私有实例在特定的 URL 进行测试，并将测试结果和你预期的性能期望做比较。  </p><p>如果小于预期，那么这个 task 就顺利完成了，如果超过了预期的性能期望，那么就会报告失败，并帮助你分析超出预期的原因。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRKibxYFwdzvMX2PbAak3hgHs2DLSNAsryvtbApayL9uM19YD0vVxZqY5mQC8ibEoZIUicHQUmGuZ1QEBQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p><p>传送门：<a href="https://github.com/tkadlec/grunt-perfbudget" target="_blank" rel="noopener">https://github.com/tkadlec/grunt-perfbudget</a>  </p><h4 id="Sitespeed-io"><a href="#Sitespeed-io" class="headerlink" title="Sitespeed.io"></a>Sitespeed.io</h4><p>Sitespeed.io 是一组基于最佳实践以及一些加载时序等量化标准的开源工具，用以帮助开发者分析网页的加载速度和渲染性能。  </p><p>Sitespeed.io 从开发者的站点收集多个页面的数据，并根据最佳实践等规则来分析这些网页，然后将结果以 HTML 的形式输出，或者以数值的形式发送到 Graphite 。  </p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/dkwuWwLoRKibxYFwdzvMX2PbAak3hgHs2mPUS1BvN0PF6ZVDVdicvM6HoQ6bjquP4NFcc9ytYLtzZNO3yCOBg7kg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1" alt="">  </p><p>传送门：<a href="https://www-origin.sitespeed.io/" target="_blank" rel="noopener">https://www-origin.sitespeed.io/</a></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> web性能 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>给博客添加feed</title>
      <link href="/2018/02/23/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0feed/"/>
      <content type="html"><![CDATA[<p>安装hexo-generator-feed  </p><pre><code>$ npm install hexo-generator-feed --save  </code></pre><p>配置到站点配置文件_config.yml  <a id="more"></a></p><pre><code># Extensions## Plugins: http://hexo.io/plugins/#RSS订阅plugin:- hexo-generator-feed#Feed Atomfeed:type: atompath: atom.xmllimit: 20  </code></pre><p>最后，在你next主题下的_config.yml下，添加RSS订阅链接即可：  </p><pre><code>rss: /atom.xml</code></pre>]]></content>
      
      <categories>
          
          <category> 博客 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> feed </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>给博客添加站点地图</title>
      <link href="/2018/02/23/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E5%9C%B0%E5%9B%BE/"/>
      <content type="html"><![CDATA[<p>安装hexo-generator-seo-friendly-sitemap  </p><pre><code>$ npm install hexo-generator-seo-friendly-sitemap --save  </code></pre><p>在站点配置文件_config.yml中添加  </p><pre><code>sitemap:    path: sitemap.xml</code></pre>]]></content>
      
      <categories>
          
          <category> 博客 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> 站点地图 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo添加站内搜索</title>
      <link href="/2018/02/23/hexo%E6%B7%BB%E5%8A%A0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2/"/>
      <content type="html"><![CDATA[<p>NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia,Swiftype和Algolia都只有一段时间的试用期，可以采用Hexo提供的Local Search,原理是通过hexo-generator-search插件在本地生成一个search.xml文件，搜索的时候从这个文件中根据关键字检索出相应的链接。<a id="more"></a> </p><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><h4 id="安装hexo-generator-search"><a href="#安装hexo-generator-search" class="headerlink" title="安装hexo-generator-search"></a>安装hexo-generator-search</h4><p>在站点的根目录下执行：  </p><pre><code>$ npm install hexo-generator-search --save  </code></pre><h4 id="安装hexo-generator-searchdb"><a href="#安装hexo-generator-searchdb" class="headerlink" title="安装hexo-generator-searchdb"></a>安装hexo-generator-searchdb</h4><p>在站点的根目录下执行：  </p><pre><code>$ npm install hexo-generator-searchdb --save  </code></pre><h4 id="启用搜索"><a href="#启用搜索" class="headerlink" title="启用搜索"></a>启用搜索</h4><p>编辑站点配置文件，加入以下代码： </p><pre><code>search:  path: search.xml  field: post  format: html  limit: 10000</code></pre>]]></content>
      
      <categories>
          
          <category> 博客 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>元素各种位置宽高</title>
      <link href="/2018/02/23/%E5%85%83%E7%B4%A0%E5%90%84%E7%A7%8D%E4%BD%8D%E7%BD%AE%E5%AE%BD%E9%AB%98/"/>
      <content type="html"><![CDATA[<h3 id="offsetLeft"><a href="#offsetLeft" class="headerlink" title="offsetLeft"></a>offsetLeft</h3><p>offsetLeft[Top]:只读，属性，当前元素到定位父级的距离（偏移值），就是到当前元素的offsetParent的距离。  </p><h4 id="当前元素没有定位，但是有定位父级"><a href="#当前元素没有定位，但是有定位父级" class="headerlink" title="当前元素没有定位，但是有定位父级"></a>当前元素没有定位，但是有定位父级</h4><p>css部分：  <a id="more"></a></p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green;position: relative;}#div3 {background: orange; }&lt;/style&gt;  </code></pre><p>js部分：  </p><pre><code>window.onload = function() {    var oDiv3 = document.getElementById(&apos;div3&apos;);  alert( oDiv3.offsetLeft );    }  </code></pre><p>html部分:  </p><pre><code>&lt;body id=&quot;body1&quot;&gt;    &lt;div id=&quot;div1&quot;&gt;        &lt;div id=&quot;div2&quot;&gt;            &lt;div id=&quot;div3&quot;&gt;&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;  </code></pre><p>上述代码在ie11和Ie7的效果如下两图所示，可以得出结论： 在ie7下，如果自己没有定位，那么offsetLeft[Top]是到body的距离。 所以会显示100px</p><p><img src="/2018/02/23/元素各种位置宽高/ie11标准.png" alt="">  </p><p><img src="/2018/02/23/元素各种位置宽高/ie7非标准.png" alt="">  </p><h4 id="当前元素有定位的情况，且定位父级"><a href="#当前元素有定位的情况，且定位父级" class="headerlink" title="当前元素有定位的情况，且定位父级"></a>当前元素有定位的情况，且定位父级</h4><p>css部分:  </p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green;position: relative;}#div3 {background: orange;position: relative; }&lt;/style&gt;  </code></pre><p>其余部分代码同上个例子。ie11的效果同上个例子，但是Ie7的效果发生了变化，当前元素有定位的情况下，是到定位父级的距离。</p><p><img src="/2018/02/23/元素各种位置宽高/有定位.png" alt="">  </p><h4 id="当前元素有定位，但是没有定位父级"><a href="#当前元素有定位，但是没有定位父级" class="headerlink" title="当前元素有定位，但是没有定位父级"></a>当前元素有定位，但是没有定位父级</h4><p>当前元素如果没有定位父级，offsetLeft默认的情况下是到body的，但是在Ie7下是指向到html的(在ie7以下body的默认margin-left值是10px)。<br>css部分:  </p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green;}#div3 {background: orange;position: relative; }&lt;/style&gt;  </code></pre><p>其余部分代码同例子一。  </p><p><img src="/2018/02/23/元素各种位置宽高/108.png" alt="">  </p><p><img src="/2018/02/23/元素各种位置宽高/110.png" alt="">  </p><h3 id="offsetTop"><a href="#offsetTop" class="headerlink" title="offsetTop"></a>offsetTop</h3><p>css部分：  </p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green;}#div3 {background: orange;position: relative; }&lt;/style&gt;  </code></pre><p>js部分:  </p><pre><code>window.onload = function() {    var oDiv3 = document.getElementById(&apos;div3&apos;);  alert( oDiv3.offsetLeft );    }  </code></pre><p>效果如下,得出结论：ie7下的html默认margin-top是15px</p><p><img src="/2018/02/23/元素各种位置宽高/88.png" alt=""> </p><p><img src="/2018/02/23/元素各种位置宽高/95.png" alt=""> </p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>如果有定位父级：<br>ie7以下：如果自己没有定位，那么offsetLeft[Top]是到body的距离；<br>如果自己有定位，那么就是到定位父级的距离。<br>其他浏览器：到定位父级的距离。  </p><h3 id="元素宽高"><a href="#元素宽高" class="headerlink" title="元素宽高"></a>元素宽高</h3><p>html部分：  </p><pre><code>&lt;body&gt;    &lt;div id=&quot;div1&quot; style=&quot;width: 100px; height: 100px; border: 1px solid red; padding: 10px; margin: 10px;&quot;&gt;&lt;/div&gt;&lt;/body&gt;  </code></pre><p>js部分:  </p><pre><code>&lt;script&gt;window.onload = function() {    var oDiv = document.getElementById(&apos;div1&apos;);alert( oDiv.style.width );    //样式宽100alert( oDiv.clientWidth );    //样式宽 + padding=可视区宽    120alert( oDiv.offsetWidth );    //样式宽 + padding + border  可视区宽 + 边框    122    }  &lt;script&gt;  </code></pre><p>得到三个宽度分别为:  </p><p><img src="/2018/02/23/元素各种位置宽高/宽高1.png" alt="">  </p><p><img src="/2018/02/23/元素各种位置宽高/宽高2.png" alt="">  </p><p><img src="/2018/02/23/元素各种位置宽高/宽高3.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
          <category> DOM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> DOM </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>父节点</title>
      <link href="/2018/02/22/%E7%88%B6%E8%8A%82%E7%82%B9/"/>
      <content type="html"><![CDATA[<h3 id="元素-parentNode"><a href="#元素-parentNode" class="headerlink" title="元素.parentNode"></a>元素.parentNode</h3><p>元素.parentNode:只读，属性，当前节点的父级节点，一个元素的父节点只有一个。在标准下和非标准下都可以，没有什么兼容问题。<br>js部分： </p><pre><code>window.onload = function() {var oDiv3 = document.getElementById(&apos;div3&apos;);alert( oDiv3.parentNode.id );}  </code></pre><p><a id="more"></a>html部分：  </p><pre><code>body id=&quot;body1&quot;&gt;    &lt;div id=&quot;div1&quot;&gt;        &lt;div id=&quot;div2&quot;&gt;            &lt;div id=&quot;div3&quot;&gt;&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;</code></pre><p>在标准ie和非标准ie下，div3的父级都是div2，没有什么兼容性问题。<br><img src="/2018/02/22/父节点/标准.jpg" alt=""><br><img src="/2018/02/22/父节点/非标准.jpg" alt=""></p><h3 id="元素-offsetParent"><a href="#元素-offsetParent" class="headerlink" title="元素.offsetParent"></a>元素.offsetParent</h3><p>元素.offsetParent:只读，属性，有定位的父节点。如果多个父节点有定位，就是离它最近的有定位的父节点。如果没有定位父级，默认是body。   </p><h4 id="没有定位父级的例子"><a href="#没有定位父级的例子" class="headerlink" title="没有定位父级的例子"></a>没有定位父级的例子</h4><p>css部分:  </p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green; zoom: 1;}#div3 {background: orange;}&lt;/style&gt;  </code></pre><p>js部分：  </p><pre><code>&lt;script&gt;window.onload = function() {        var oDiv3 = document.getElementById(&apos;div3&apos;);    alert( oDiv3.offsetParent );    }  </code></pre><p>html部分：  </p><pre><code>&lt;body id=&quot;body1&quot;&gt;    &lt;div id=&quot;div1&quot;&gt;        &lt;div id=&quot;div2&quot;&gt;            &lt;div id=&quot;div3&quot;&gt;&lt;/div&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;</code></pre><p><img src="/2018/02/22/父节点/offset.jpg" alt=""></p><h4 id="加了定位属性的例子"><a href="#加了定位属性的例子" class="headerlink" title="加了定位属性的例子"></a>加了定位属性的例子</h4><p>css部分:  </p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green; zoom: 1;position: relative;}#div3 {background: orange;}&lt;/style&gt;  </code></pre><p>js部分： </p><pre><code>window.onload = function() {        var oDiv3 = document.getElementById(&apos;div3&apos;);    alert( oDiv3.offsetParent.id );    }  </code></pre><p>展示效果如下，可以看出，div2加了定位属性之后，div3的offsetParent就变成了div2,而不是body了。  </p><p><img src="/2018/02/22/父节点/定位.jpg" alt="">  </p><h4 id="ie7以下，当前元素有定位例子"><a href="#ie7以下，当前元素有定位例子" class="headerlink" title="ie7以下，当前元素有定位例子"></a>ie7以下，当前元素有定位例子</h4><p>ie7以下，如果当前元素没有定位默认是body，如果有定位则是html.<br>css部分：</p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green; zoom: 1;}#div3 {background: orange;position: relative;}&lt;/style&gt;  </code></pre><p>js部分：  </p><pre><code>window.onload = function() {            var oDiv3 = document.getElementById(&apos;div3&apos;);        alert( oDiv3.offsetParent.tagName );        }    </code></pre><p>在ie11的效果如下图：  </p><p><img src="/2018/02/22/父节点/body.png" alt="">  </p><p>在ie7及以下的效果如下图:  </p><p><img src="/2018/02/22/父节点/html.png" alt="">  </p><h4 id="ie7以下，当前元素某个父级触发layout"><a href="#ie7以下，当前元素某个父级触发layout" class="headerlink" title="ie7以下，当前元素某个父级触发layout"></a>ie7以下，当前元素某个父级触发layout</h4><p>ie7以下，如果当前元素的某个父级触发了layout，那么offsetParent就会指向到触发了layout特性的父节点上。<br>css部分：  </p><pre><code>&lt;style&gt;div {padding: 40px 50px;}#div1 {background: red;}#div2 {background: green; zoom: 1;}#div3 {background: orange;}&lt;/style&gt;</code></pre><p>js部分：  </p><pre><code>window.onload = function() {                            alert( oDiv3.offsetParent.id);        }  </code></pre><p>效果如下所示，因为div2有zoom属性，zoom触发了layout,所以div3的offsetParent是触发了layout特性的父节点div2  </p><p><img src="/2018/02/22/父节点/layout.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 父节点 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>子节点和兄弟节点的操作</title>
      <link href="/2018/02/21/%E5%AD%90%E8%8A%82%E7%82%B9%E5%92%8C%E5%85%84%E5%BC%9F%E8%8A%82%E7%82%B9%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
      <content type="html"><![CDATA[<h3 id="元素-firstChild"><a href="#元素-firstChild" class="headerlink" title="元素.firstChild"></a>元素.firstChild</h3><p>元素.firstChild:只读，属性，第一个子节点  </p><pre><code>&lt;body&gt;    &lt;ul id=&quot;ul1&quot;&gt;        &lt;li&gt;11111&lt;/li&gt;        &lt;li&gt;22222&lt;/li&gt;        &lt;li&gt;33333&lt;/li&gt;        &lt;li&gt;44444&lt;/li&gt;    &lt;/ul&gt;&lt;/body&gt;  </code></pre><p>添加下列代码来显示第一个子节点  <a id="more"></a> 下图说明在标准ie浏览器下:firstChild会包含文本类型的节点；在非标准的ie下：只包含元素节点</p><pre><code>alert( oUl.firstChild );  </code></pre><p><img src="/2018/02/21/子节点和兄弟节点的操作/firstChild.png" alt="">  </p><p><img src="/2018/02/21/子节点和兄弟节点的操作/firstChild非标准.png" alt="">  </p><h3 id="元素-firstElementChild"><a href="#元素-firstElementChild" class="headerlink" title="元素.firstElementChild"></a>元素.firstElementChild</h3><p>元素.firstElementChild:只读，属性，标准下获取第一个元素类型的子节点（所以在非标准的ie下是不支持这个属性的),所以非标准下会输出下图所示undefined </p><p><img src="/2018/02/21/子节点和兄弟节点的操作/非标准firstele.png" alt=""><br>可以用以下代码，这样的话在标准下和非标准下都可以正常。</p><pre><code>if ( oUl.firstElementChild ) {     oUl.firstElementChild.style.background = &apos;red&apos;; //在标准浏览器下 } else {     oUl.firstChild.style.background = &apos;red&apos;;   //在非标准ie下 }  </code></pre><p>简化这段代码：  </p><pre><code>var oFirst=oUl.firstElementChild || oUl.firstChild;if(oFirst){    oFirst.style.background=&apos;red&apos;;}else{    alert(&apos;没有子节点可以设置&apos;);    }  </code></pre><h3 id="元素-lastChild-元素-lastElementChild"><a href="#元素-lastChild-元素-lastElementChild" class="headerlink" title="元素.lastChild || 元素.lastElementChild"></a>元素.lastChild || 元素.lastElementChild</h3><p>元素.lastChild || 元素.lastElementChild:最后一个子节点  </p><pre><code>var oLast=oUl.lastElementChild || oUl.lastChild;if(oLast){    oLast.style.background=&apos;yellow&apos;;}else{    alert(&apos;没有子节点可以设置&apos;);    }  </code></pre><h3 id="元素-nextSibling-元素-nextElementSibling"><a href="#元素-nextSibling-元素-nextElementSibling" class="headerlink" title="元素.nextSibling || 元素.nextElementSibling"></a>元素.nextSibling || 元素.nextElementSibling</h3><p>元素.nextSibling || 元素.nextElementSibling:下一个兄弟节点  </p><pre><code>var oNext=oFirst.nextElementSibling || oFirst.nextSibling;  oNext.style.background=&apos;blue&apos;;  </code></pre><h3 id="元素-previousSibling-元素-previousElementSibling"><a href="#元素-previousSibling-元素-previousElementSibling" class="headerlink" title="元素.previousSibling || 元素.previousElementSibling"></a>元素.previousSibling || 元素.previousElementSibling</h3><p>元素.previousSibling || 元素.previousElementSibling：上一个兄弟节点  </p><pre><code>var oPrev=oLast.previousElementSibling || oLast.previousSibling;  oPrev.style.background=&apos;orange&apos;;</code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> DOM </tag>
            
            <tag> 前端 </tag>
            
            <tag> 子节点和兄弟节点 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DOM之childNodes</title>
      <link href="/2018/02/21/DOM%E4%B9%8BchildNodes/"/>
      <content type="html"><![CDATA[<p>写在前面的话：工作当中不太推荐使用childNodes，兼容性问题比较多。推荐使用children<br>DOM是javascript操作网页的接口，全称为文档对象模型（Document Object Model）。它的作用是将网页转为一个JavaScript对象，从而可以使用JavaScript对网页进行各种操作（比如增删内容）。浏览器会根据DOM模型，将HTML文档解析成一系列的节点，再由这些节点组成一个树状结构。DOM的最小组成单位叫做节点（node），文档的树形结构由12种类型的节点组成。 <a id="more"></a><br>小结：一般地，节点至少拥有nodeType、nodeName和nodeValue这三个基本属性。节点类型不同，三个属性的值也不相同。  </p><h3 id="childNodes-子节点"><a href="#childNodes-子节点" class="headerlink" title="childNodes 子节点"></a>childNodes 子节点</h3><p>元素.childNodes为子节点列表集合（只读），注意childNodes只包含一级子节点，不包含后辈孙级以下的节点。</p><h3 id="nodeType-节点类型"><a href="#nodeType-节点类型" class="headerlink" title="nodeType 节点类型"></a>nodeType 节点类型</h3><p>nodeType属性返回节点类型的常数值(无符号短整型)。不同的类型对应不同的常数值，12种类型分别对应12种不同的常数值  </p><table><thead><tr><th style="text-align:left">节点类型</th><th>名称</th><th style="text-align:center">对应的常数值</th></tr></thead><tbody><tr><td style="text-align:left">元素节点</td><td>Node.ELEMENT_NODE</td><td style="text-align:center">1</td></tr><tr><td style="text-align:left">属性节点</td><td>Node.ATTRIBUTE_NODE</td><td style="text-align:center">2</td></tr><tr><td style="text-align:left">文本节点</td><td>Node.TEXT_NODE</td><td style="text-align:center">3</td></tr><tr><td style="text-align:left">CDATA节点</td><td>Node.CDATA_SECTION_NODE</td><td style="text-align:center">4</td></tr><tr><td style="text-align:left">实体引用名称节点</td><td>Node.ENTRY_REFERENCE_NODE</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">实体名称节点</td><td>Node.ENTITY_NODE</td><td style="text-align:center">6</td></tr><tr><td style="text-align:left">处理指令节点</td><td>Node.PROCESSING_INSTRUCTION_NODE</td><td style="text-align:center">7</td></tr><tr><td style="text-align:left">注释节点</td><td>Node.COMMENT_NODE</td><td style="text-align:center">8</td></tr><tr><td style="text-align:left">文档节点</td><td>Node.DOCUMENT_NODE</td><td style="text-align:center">9</td></tr><tr><td style="text-align:left">文档类型节点</td><td>Node.DOCUMENT_TYPE_NODE</td><td style="text-align:center">10</td></tr><tr><td style="text-align:left">文档片段节点</td><td>Node.DOCUMENT_FRAGMENT_NODE</td><td style="text-align:center">11</td></tr><tr><td style="text-align:left">DTD声明节点</td><td>Node.NOTATION_NODE</td><td style="text-align:center">12  </td></tr></tbody></table><h3 id="元素节点和文本节点"><a href="#元素节点和文本节点" class="headerlink" title="元素节点和文本节点"></a>元素节点和文本节点</h3><p>下面这段代码在标准的ie下面显示是9个节点，在非标准的ie下显示4个节点。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> oUl = <span class="built_in">document</span>.getElementById(<span class="string">'ul1'</span>);</span></span><br><span class="line"><span class="undefined">alert( oUl.childNodes.length );</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"ul1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>33333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>44444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这是因为在标准ie下包含了文本和元素类型的节点，也会包含非法嵌套的节点。而在非标准的浏览器下，只包含元素类型的节点，ie7以下不会包含非法嵌套的节点。所以在这个例子中，在标准浏览器下，会把标签元素之间的回车换行符当作文本类型的节点（有5个）+4个元素节点，合起来就是9个；在非标准下只有4个元素节点。如果删掉其中的一个回车换行符，则会在标准浏览器下减少一个节点。<br>区分了这一点，再看下面这个例子：  </p><pre><code>for (var i=0; i&lt;oUl.childNodes.length; i++) {            oUl.childNodes[i].style.background = &apos;red&apos;;        }</code></pre><p>如果要循环当前oUl下的所有的子节点列表，给所有子节点加上一个背景色。则在非标准的ie下可以很正常地显示：<br><img src="/2018/02/21/DOM之childNodes/非标准浏览器.jpg" alt="正常显示"><br>而在标准ie下，会显示出错。这是因为回车换行符被当作文本节点，所以第0个子节点其实是一个文本，文本是没有style也没有background的属性的。<br><img src="/2018/02/21/DOM之childNodes/标准ie.jpg" alt="正常显示"><br><img src="/2018/02/21/DOM之childNodes/出错.jpg" alt="正常显示"><br> 这里我们可以添加以下代码来验证第0个元素的节点类型: </p><pre><code>alert(oUl.childNodes[0].nodeType);</code></pre><p>在标准ie下，显示3，说明第0个元素是文本节点。而在非标准ie下显示1，说明第0个节点是元素节点：  </p><p><img src="/2018/02/21/DOM之childNodes/文本类型.jpg" alt=""></p><p><img src="/2018/02/21/DOM之childNodes/元素节点.jpg" alt="">  </p><h3 id="属性节点"><a href="#属性节点" class="headerlink" title="属性节点"></a>属性节点</h3><p>元素.attributes用来获取当前的属性（只读，属性列表集合)    </p><pre><code>alert( oUl.attributes.length );获取并显示元素属性个数alert(oUl.attributes[1].value);显示属性值</code></pre><h3 id="children"><a href="#children" class="headerlink" title="children"></a>children</h3><p>工作中推荐使用children，只读属性，子节点列表集合。和child差不多，有一点区别就是：  </p><pre><code>&lt;body&gt;    &lt;ul id=&quot;ul1&quot; &gt;        &lt;li&gt;11111 &lt;span&gt;span&lt;/span&gt;&lt;/li&gt;        &lt;li&gt;22222&lt;/li&gt;        &lt;li&gt;33333&lt;/li&gt;        &lt;li&gt;44444&lt;/li&gt;        &lt;p&gt;pppppppp&lt;/p&gt;    &lt;/ul&gt;&lt;/body&gt;</code></pre><p>上述这段代码，在标准ie下，显示的children.length为5，可以看出使用children的时候不会再把文本节点算进去了，但是把非法嵌套的P也包括进去了  </p><p><img src="/2018/02/21/DOM之childNodes/children.png" alt="">  </p><p><img src="/2018/02/21/DOM之childNodes/children标准结构.png" alt=""><br>而在非标准ie下，显示的children.length为4，这是因为p没有算进去，不认这种非法嵌套。<br><img src="/2018/02/21/DOM之childNodes/children1.png" alt="">  </p><p><img src="/2018/02/21/DOM之childNodes/children非标准结构.png" alt=""> </p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> DOM </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XHTML+CSS2笔记1</title>
      <link href="/2018/02/20/XHTML-CSS2%E7%AC%94%E8%AE%B01/"/>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>H5标签兼容性解决方案</title>
      <link href="/2018/02/20/H5%E6%A0%87%E7%AD%BE%E5%85%BC%E5%AE%B9%E6%80%A7%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <content type="html"><![CDATA[<p>H5的语义化标签以及属性，可以让开发者非常方便地实现清晰的web页面布局，加上css3的效果渲染，快速建立web页面就容易多了。<br>H5的新增标签有：<a href="http://www.w3school.com.cn/html5/html5_reference.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/html5/html5_reference.asp</a><br>使用这些标签可以使代码语义化更加直观，而且更方便seo优化，但是H5新标签在ie6/7/8上并不能识别，这里使用JavaScript来解决兼容性问题。<br>一、原理说明  <a id="more"></a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    header &#123;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">        height: 200px;</span></span><br><span class="line"><span class="undefined">        background-color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    section &#123;</span></span><br><span class="line"><span class="undefined">        width: 150px;</span></span><br><span class="line"><span class="undefined">        height: 150px;</span></span><br><span class="line"><span class="undefined">        background-color: yellow;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    footer &#123;</span></span><br><span class="line"><span class="undefined">        width: 100px;</span></span><br><span class="line"><span class="undefined">        height: 100px;</span></span><br><span class="line"><span class="undefined">        background-color: blue;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>header<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span>section<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>例如上面这段代使用了header、section、footer标签，这几个H5的标签在ie7浏览器下打开是这个样子的:  </p><p><img src="/2018/02/20/H5标签兼容性解决方案/ie7.jpg" alt="不兼容"><br>这是因为这几个H5的标签在ie以下的浏览器并不兼容，所以显示不出来样式。解决方法：用js来自定义这三个H5标签，但是因为自定义标签默认为内联样式（不支持宽高的设置，靠内容充满),所以看到的如下所示:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.createElement(<span class="string">"header"</span>); </span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.createElement(<span class="string">"section"</span>);</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.createElement(<span class="string">"footer"</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p> <img src="/2018/02/20/H5标签兼容性解决方案/js.jpg" alt="加js解决"><br> 如果要以块级元素显示，显示宽高，则在每个样式里面添加代码display：block;  </p><p>二、解决方案1:引用js成熟的库–html5shiv.js<br>在<head></head>之间直接添加以下代码:    </p><pre><code>&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js&quot;&gt;&lt;/script&gt; </code></pre><p>或者直接添加:  </p><pre><code>&lt;!--[if lt IE 9]&gt;&lt;script&gt; src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&lt;/script&gt;&lt;![endif]--&gt;  </code></pre><p>三、解决方案2：自己coding js  </p><pre><code>&lt;script&gt;    (function() {     if (!      /*@cc_on!@*/     0) return;     var e = “abbr, article, aside, audio, canvas, datalist, details, dialog, eventsource, figure, footer, header, hgroup, mark, menu, meter, nav, output, progress, section, time, video”.split(‘, ‘);     var i= e.length;     while (i–){         document.createElement(e[i])     } })() &lt;/script&gt;</code></pre><p>不管你用上面哪种方式，请记得在CSS中进行如下定义，目的是让这些标签成为块状元素，just like div。  </p><pre><code>/*html5*/article,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}  </code></pre>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H5标签 </tag>
            
            <tag> 兼容 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>手把手教你github+hexo搭建博客（基础篇）</title>
      <link href="/2018/02/14/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0github-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9F%BA%E7%A1%80%E7%AF%87%EF%BC%89/"/>
      <content type="html"><![CDATA[<p><img src="/2018/02/14/手把手教你github-hexo搭建博客（基础篇）/github.jpg" alt="git"></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>(更新)hexo+github博客搭建进阶指南</title>
      <link href="/2018/02/13/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%BF%9B%E9%98%B6%E6%8C%87%E5%8D%97/"/>
      <content type="html"><![CDATA[<p>[TOC]</p><h1 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h1><p>点击  <a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="noopener">这里</a>  或者 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a>选择自己喜欢的样式，并复制相应的代码。<br>然后复制代码到themes/next/layout/_layout.swig文件中，放置在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>的下面，并把href改为你的GitHub地址。<br><img src="/2018/02/13/github-hexo博客搭建进阶指南/github+hexo博客搭建进阶指南/github.jpg" alt=""><br><a id="more"></a>    </p><h1 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h1><p><img src="/2018/02/13/github-hexo博客搭建进阶指南/github+hexo博客搭建进阶指南/rss.jpg" alt=""></p><p>切换到你博客文件夹的根目录下，然后在git bash里面输入以下代码，安装模块</p><p><code>npm install --save hexo-generator-feed</code></p><p>然后打开站点配置文件，在里面的末尾添加：(请注意在冒号后面要加一个空格，不然会发生错误！)</p><p>#3、添加动态背景<br>实现点击出现桃心效果</p><p>修改文章内链接文本样式<br>修改文章底部的那个带#号的标签<br>在每篇文章末尾统一添加“本文结束”标记<br>修改作者头像并旋转<br>博文压缩<br>修改“代码块自定义样式<br>侧边栏社交小图标设置<br>主页文章添加阴影效果<br>在网站底部加上访问量<br>添加热度<br>网站底部字数统计<br>添加 README.md 文件<br>设置网站的图标Favicon<br>实现统计功能<br>添加顶部加载条<br>在文章底部增加版权信息<br>添加网易云跟帖(跟帖关闭，已失效，改为来必力)<br>隐藏网页底部powered By Hexo / 强力驱动<br>修改网页底部的桃心<br>文章加密访问<br>添加jiathis分享<br>博文置顶<br>修改字体大小<br>修改打赏字体不闪动<br>自定义鼠标样式<br>为博客加上萌萌的宠物<br>DaoVoice 在线联系<br>点击爆炸效果</p>]]></content>
      
      <categories>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> github </tag>
            
            <tag> hxo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>青蛙旅行破解版</title>
      <link href="/2018/02/13/qingwa/"/>
      <content type="html"><![CDATA[<pre><code>链接    密码gggghhhhhhhhhhhhhaaaaaaaaaaaaaaaaddddddddddddddrrrrrrrrrrrrrrrrrrggggggggggggggggg</code></pre>]]></content>
      
      <categories>
          
          <category> android </category>
          
          <category> 逆向 </category>
          
          <category> 破解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> 破解 </tag>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>九大排序算法总结</title>
      <link href="/2018/02/13/ercha/"/>
      <content type="html"><![CDATA[<pre><code>主要有以下32种：</code></pre><p>在右上角或者左上角实现fork me on github<br>添加RSS<br>添加动态背景<br>实现点击出现桃心效果<br><a id="more"></a><br>修改文章内链接文本样式<br>修改文章底部的那个带#号的标签<br>在每篇文章末尾统一添加“本文结束”标记<br>修改作者头像并旋转<br>博文压缩<br>修改“代码块自定义样式<br>侧边栏社交小图标设置<br>主页文章添加阴影效果<br>在网站底部加上访问量<br>添加热度<br>网站底部字数统计<br>添加 README.md 文件<br>设置网站的图标Favicon<br>实现统计功能<br>添加顶部加载条<br>在文章底部增加版权信息<br>添加网易云跟帖(跟帖关闭，已失效，改为来必力)<br>隐藏网页底部powered By Hexo / 强力驱动<br>修改网页底部的桃心<br>文章加密访问<br>添加jiathis分享<br>博文置顶<br>修改字体大小<br>修改打赏字体不闪动<br>自定义鼠标样式<br>为博客加上萌萌的宠物<br>DaoVoice 在线联系<br>点击爆炸效果</p>]]></content>
      
      <categories>
          
          <category> 数据结构 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>DOM浅谈</title>
      <link href="/2018/02/02/DOM%E6%B5%85%E8%B0%88/"/>
      <content type="html"><![CDATA[<p>先附上一个DOM的教程：<a href="http://www.w3school.com.cn/htmldom/dom_methods.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/htmldom/dom_methods.asp</a></p><p>   DOM的结构实际上和数据结构里面的树非常相似</p><p>方法    描述<br>getElementById()    返回带有指定 ID 的元素。<br>getElementsByTagName()    返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。<br>getElementsByClassName()    返回包含带有指定类名的所有元素的节点列表。<br><a id="more"></a><br>appendChild()    把新的子节点添加到指定节点。<br>removeChild()    删除子节点。<br>replaceChild()    替换子节点。<br>insertBefore()    在指定的子节点前面插入新的子节点。<br>createAttribute()    创建属性节点。<br>createElement()    创建元素节点。<br>createTextNode()    创建文本节点。<br>getAttribute()    返回指定的属性值。<br>setAttribute()    把指定属性设置或修改为指定的值。</p><p>·其他细节修改<br>Copyright：isabllezhou mail:isabellezhou@163.com</p>]]></content>
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOM </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
